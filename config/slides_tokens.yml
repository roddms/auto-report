params:
  REGION_CD: "00000001"
  DATE_FROM: "20250927"
  DATE_TO:   "20250930"
  BUFFER_M: 500

slides:
  - name: "1: 표지"
    tokens:
      SL1_p_1:
        sql: |-
          SELECT event_nm
          FROM regionmonitor.tb_analysis_report_tmp
          WHERE region_cd = CAST(:REGION_CD AS VARCHAR);

  - name: "3 : 행사 전체요약"
    tokens:
      SL3_p_1:
        sql: | # 총 방문 인구
          SELECT to_char(COALESCE(SUM(TOT_VIPOP), 0), 'FM999,999,999,999')
          FROM regionmonitor.tb_sexdstn_visit_popltn
          WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            AND REGION_CD = CAST(:REGION_CD AS VARCHAR);

      SL3_p_2:
        sql: | # 전년대비 방문인구 증감율(%)
          SELECT 
            CASE
              -- 증감액 계산: cur.tot_cur - COALESCE(cur.tot_prev, 0)
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0) > 0
                THEN ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1)::TEXT || '% ▲'
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0) < 0
                THEN ABS(ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1))::TEXT || '% ▼'
              ELSE COALESCE(ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1), 0.0)::TEXT || '% -'
            END
          FROM (
            SELECT 
              SUM(TOT_VIPOP) AS tot_cur,             -- 현재 기간 총합
              SUM(TOT_VIPOP_PERV1Y) AS tot_prev      -- 전년 동기간 총합 (테이블에서 직접 사용)
            FROM regionmonitor.TB_INTRST_REGION      -- 테이블 이름 변경 적용
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur;

      SL3_p_3:
        sql: | # 총 매출액
          SELECT to_char(ROUND(SUM(TOT_SALAMT)/1000000, 0), 'FM999,999,999') || '백만'
          FROM regionmonitor.tb_sexdstn_selng
          WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            AND REGION_CD = CAST(:REGION_CD AS VARCHAR);

      SL3_p_4:
        sql: | # 전년대비 매출 증감율(%)
          SELECT 
                CASE
                  -- 계산 로직에서 현재 매출(tot_cur)과 전년 동기 매출(tot_prev)을 사용
                  WHEN (cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0) > 0
                    THEN ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1)::TEXT || '% ▲'
                  WHEN (cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0) < 0
                    THEN ABS(ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1))::TEXT || '% ▼'
                  ELSE COALESCE(ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1), 0.0)::TEXT || '% -'
                END
              FROM (
                -- **핵심 수정: 현재 매출과 전년 동기 매출을 한 번의 쿼리로 합산**
                SELECT 
                  SUM(TOT_SALAMT) AS tot_cur,             -- 현재 기간 총 매출액
                  SUM(TOT_SALAMT_PERV1Y) AS tot_prev      -- 전년 동기간 총 매출액 (새 테이블 컬럼 사용)
                FROM regionmonitor.TB_INTRST_REGION      -- 테이블 이름 변경 적용
                WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
                  AND REGION_CD = :REGION_CD
              ) cur;

      SL3_p_5:
        sql: | # 최다 방문일(YYYYMMDD)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS daily_vis
            FROM regionmonitor.tb_sexdstn_visit_popltn
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT to_char(to_date(STDR_YMD,'YYYYMMDD'), 'FMMM"월" FMDD"일"')
          FROM daily
          ORDER BY daily_vis DESC, STDR_YMD
          LIMIT 1;

      SL3_p_6:
        sql: | # 최다 방문일 방문자수
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS daily_vis
            FROM regionmonitor.tb_sexdstn_visit_popltn
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT to_char(daily_vis, 'FM999,999,999,999')
          FROM daily
          ORDER BY daily_vis DESC, STDR_YMD
          LIMIT 1;

      SL3_p_7:
        sql: | # 최다 방문일 비중(%)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS daily_vis
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = :REGION_CD
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT ROUND(100.0 * daily_vis / NULLIF(SUM(daily_vis) OVER (),0), 1)
          FROM daily
          ORDER BY daily_vis DESC, STDR_YMD
          LIMIT 1;

      SL3_p_8:
        sql: | # 최다 소비 업종코드(SVC_INDUTY_SCLAS_CD)
          WITH cat AS (
            SELECT SVC_INDUTY_SCLAS_CD AS category, SUM(TOT_SALAMT) AS cat_sum
            FROM regionmonitor.tb_sexdstn_selng
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM cat c
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON c.category = i.svc_induty_sclas_cd
          ORDER BY c.cat_sum DESC, c.category
          LIMIT 1;


      SL3_p_9:
        sql: | # 최다 소비 업종 비중(%)
          WITH cat AS (
            SELECT SVC_INDUTY_SCLAS_CD AS category, SUM(TOT_SALAMT) AS cat_sum
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = :REGION_CD
              AND to_date(STDR_YMD,'YYYYMMDD') BETWEEN to_date(:DATE_FROM,'YYYYMMDD') AND to_date(:DATE_TO,'YYYYMMDD')
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT ROUND(100.0 * cat_sum / NULLIF(SUM(cat_sum) OVER (),0), 1)
          FROM cat
          ORDER BY cat_sum DESC, category
          LIMIT 1;

      SL3_p_10:
        sql: | # 피크타임 라벨(일자별 피크 빈도 최다)
          WITH base AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d,
                  SUM(T0_T6_VIPOP)  AS T0_6, SUM(T7_VIPOP)  AS T7,  SUM(T8_VIPOP)  AS T8,
                  SUM(T9_VIPOP)     AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
                  SUM(T12_VIPOP)    AS T12,  SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
                  SUM(T15_VIPOP)    AS T15,  SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
                  SUM(T18_VIPOP)    AS T18,  SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
                  SUM(T21_VIPOP)    AS T21,  SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          unpivot AS (
            SELECT d, h, v
            FROM base b, LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          day_peak AS (
            SELECT d, h
            FROM (
              SELECT d, h, v, ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) rn
              FROM unpivot
            ) s
            WHERE rn = 1
          ),
          freq AS (SELECT h, COUNT(*) AS days_cnt FROM day_peak GROUP BY h)
          SELECT h FROM freq ORDER BY days_cnt DESC, h LIMIT 1;

      SL3_p_11:
        sql: | # 피크타임 '일 평균' 방문인구(콤마)
          WITH base AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d,
                  SUM(T0_T6_VIPOP) AS T0_6, SUM(T7_VIPOP) AS T7,  SUM(T8_VIPOP) AS T8,
                  SUM(T9_VIPOP) AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
                  SUM(T12_VIPOP) AS T12, SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
                  SUM(T15_VIPOP) AS T15, SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
                  SUM(T18_VIPOP) AS T18, SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
                  SUM(T21_VIPOP) AS T21, SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          unpivot AS (
            SELECT d, h, v
            FROM base b, LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          day_peak AS (
            SELECT d, h
            FROM (
              SELECT d, h, v, ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) rn
              FROM unpivot
            ) s
            WHERE rn = 1
          ),
          freq AS (SELECT h, COUNT(*) AS days_cnt FROM day_peak GROUP BY h),
          best AS (SELECT h FROM freq ORDER BY days_cnt DESC, h LIMIT 1)
          SELECT to_char(
                  ROUND(AVG(
                    CASE (SELECT h FROM best)
                      WHEN '00-06' THEN T0_6 WHEN '07' THEN T7 WHEN '08' THEN T8 WHEN '09' THEN T9
                      WHEN '10' THEN T10 WHEN '11' THEN T11 WHEN '12' THEN T12 WHEN '13' THEN T13
                      WHEN '14' THEN T14 WHEN '15' THEN T15 WHEN '16' THEN T16 WHEN '17' THEN T17
                      WHEN '18' THEN T18 WHEN '19' THEN T19 WHEN '20' THEN T20 WHEN '21' THEN T21
                      WHEN '22' THEN T22 ELSE T23 END
                  )),
                  'FM999,999,999,999'
                )
          FROM base;

      SL3_p_12:
        sql: | # 피크타임 비중(%): (해당 시간대 일평균) / (일평균 전체) × 100
          WITH base AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d,
                  SUM(T0_T6_VIPOP) AS T0_6, SUM(T7_VIPOP) AS T7,  SUM(T8_VIPOP) AS T8,
                  SUM(T9_VIPOP) AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
                  SUM(T12_VIPOP) AS T12, SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
                  SUM(T15_VIPOP) AS T15, SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
                  SUM(T18_VIPOP) AS T18, SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
                  SUM(T21_VIPOP) AS T21, SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          u AS (
            SELECT d, h, v FROM base b, LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          dpk AS (
            SELECT d, h FROM (
              SELECT d, h, v, ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) rn
              FROM u
            ) s WHERE rn = 1
          ),
          freq AS (SELECT h, COUNT(*) AS days_cnt FROM dpk GROUP BY h),
          best AS (SELECT h FROM freq ORDER BY days_cnt DESC, h LIMIT 1),
          day_total AS (
            SELECT d,
                  (T0_6+T7+T8+T9+T10+T11+T12+T13+T14+T15+T16+T17+T18+T19+T20+T21+T22+T23)::numeric AS tot
            FROM base
          )
          SELECT ROUND(
                  100.0 *
                  AVG(
                    CASE (SELECT h FROM best)
                      WHEN '00-06' THEN T0_6 WHEN '07' THEN T7 WHEN '08' THEN T8 WHEN '09' THEN T9
                      WHEN '10' THEN T10 WHEN '11' THEN T11 WHEN '12' THEN T12 WHEN '13' THEN T13
                      WHEN '14' THEN T14 WHEN '15' THEN T15 WHEN '16' THEN T16 WHEN '17' THEN T17
                      WHEN '18' THEN T18 WHEN '19' THEN T19 WHEN '20' THEN T20 WHEN '21' THEN T21
                      WHEN '22' THEN T22 ELSE T23 END
                  )
                  / NULLIF(AVG(tot),0),
                  1
                )
          FROM base
          JOIN day_total USING (d);



      SL3_p_13:
        sql: | # 매출 최상위 연령대 라벨
          WITH base AS (
            SELECT
              COALESCE(SUM(GNR20_SALAMT),0) AS a20,
              COALESCE(SUM(GNR30_SALAMT),0) AS a30,
              COALESCE(SUM(GNR40_SALAMT),0) AS a40,
              COALESCE(SUM(GNR50_SALAMT),0) AS a50,
              COALESCE(SUM(GNR60_SALAMT),0) AS a60,
              COALESCE(SUM(GNR70_SALAMT),0) AS a70
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          unpivot AS (
            SELECT '20대' AS seg, a20 AS v FROM base UNION ALL
            SELECT '30대', a30 FROM base UNION ALL
            SELECT '40대', a40 FROM base UNION ALL
            SELECT '50대', a50 FROM base UNION ALL
            SELECT '60대', a60 FROM base UNION ALL
            SELECT '70대', a70 FROM base
          )
          SELECT seg
          FROM unpivot
          ORDER BY v DESC, seg
          LIMIT 1;


      SL3_p_14:
        sql: | # 매출 최상위 연령대 비중(%)
          WITH base AS (
            SELECT
              COALESCE(SUM(GNR20_SALAMT),0) AS a20,
              COALESCE(SUM(GNR30_SALAMT),0) AS a30,
              COALESCE(SUM(GNR40_SALAMT),0) AS a40,
              COALESCE(SUM(GNR50_SALAMT),0) AS a50,
              COALESCE(SUM(GNR60_SALAMT),0) AS a60,
              COALESCE(SUM(GNR70_SALAMT),0) AS a70
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          u AS (
            SELECT '20대' AS seg, a20 AS v FROM base UNION ALL
            SELECT '30대', a30 FROM base UNION ALL
            SELECT '40대', a40 FROM base UNION ALL
            SELECT '50대', a50 FROM base UNION ALL
            SELECT '60대', a60 FROM base UNION ALL
            SELECT '70대', a70 FROM base
          )
          SELECT ROUND(100.0 * v / NULLIF(SUM(v) OVER (), 0), 1)
          FROM u
          ORDER BY v DESC, seg
          LIMIT 1;


  - name : "4: 3개년 비교 분석"
    tokens:
      SL4_p_1:
        sql: | # 전전년도 방문인구
          SELECT to_char(COALESCE(SUM(TOT_VIPOP),0), 'FM999,999,999,999')
          FROM regionmonitor.tb_sexdstn_visit_popltn
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN
                to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '2 year','YYYYMMDD')
            AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '2 year','YYYYMMDD');

      SL4_p_2:
        sql: | # 전년도 방문인구
          SELECT to_char(COALESCE(SUM(TOT_VIPOP),0), 'FM999,999,999,999')
          FROM regionmonitor.tb_sexdstn_visit_popltn
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN
                to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
            AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD');

      SL4_p_3:
        sql: | # 전년도 vs 전전년도 방문인구 증감률(%)
          SELECT 
            CASE
              -- 전년(tot_prev) 대비 전전년(tot_prev2) 증감율 계산
              WHEN (cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0) > 0
                THEN ROUND((cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1)::TEXT || '% ▲'
              WHEN (cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0) < 0
                THEN ABS(ROUND((cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1))::TEXT || '% ▼'
              ELSE COALESCE(ROUND((cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1), 0.0)::TEXT || '% -'
            END
          FROM (
            -- **핵심 수정: 전년과 전전년의 총합을 단일 쿼리에서 구함**
            SELECT 
              SUM(TOT_VIPOP_PERV1Y) AS tot_prev,       -- 전년 동기간 총합 (Y-1)
              SUM(TOT_VIPOP_PERV2Y) AS tot_prev2       -- 전전년 동기간 총합 (Y-2)
            FROM regionmonitor.TB_INTRST_REGION        -- 테이블 이름 변경 적용
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur;

      SL4_p_4:
        sql: | # 당해년도 방문인구 
          SELECT to_char(COALESCE(SUM(TOT_VIPOP),0), 'FM999,999,999,999')
          FROM regionmonitor.tb_sexdstn_visit_popltn
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL4_p_5:
        sql: | # 당해년도 vs 전전년도(기준년도) 방문인구 증감율(%)
          SELECT 
            CASE
              -- 당해년도(tot_cur) 대비 전전년도(tot_prev2) 증감율 계산
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0) > 0
                THEN ROUND((cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1)::TEXT || '% ▲'
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0) < 0
                THEN ABS(ROUND((cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1))::TEXT || '% ▼'
              ELSE COALESCE(ROUND((cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1), 0.0)::TEXT || '% -'
            END
          FROM (
            -- **핵심 수정: 당해년도 합계와 전전년도 합계를 단일 쿼리에서 구함**
            SELECT 
              SUM(TOT_VIPOP) AS tot_cur,             -- 현재 기간 총합
              SUM(TOT_VIPOP_PERV2Y) AS tot_prev2      -- 전전년 동기간 총합 (새 테이블 컬럼 사용)
            FROM regionmonitor.TB_INTRST_REGION      -- 테이블 이름 변경 적용
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur;

      SL4_p_6:
        sql: | # 2023년 매출액
          SELECT to_char(ROUND(SUM(TOT_SALAMT)/1000000, 0), 'FM999,999,999') || '백만'
          FROM regionmonitor.tb_sexdstn_selng
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN
                to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '2 year','YYYYMMDD')
            AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '2 year','YYYYMMDD');

      SL4_p_7:
        sql: | # 2024년 매출액
          SELECT to_char(ROUND(SUM(TOT_SALAMT)/1000000, 0), 'FM999,999,999') || '백만'
          FROM regionmonitor.tb_sexdstn_selng
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN
                to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
            AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD');

      SL4_p_8:
        sql: | # 전년도 vs 전전년도 매출 증감율(%)
          SELECT 
            CASE
              -- 전년(tot_prev) 대비 전전년(tot_prev2) 증감율 계산
              WHEN (cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0) > 0
                THEN ROUND((cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1)::TEXT || '% ▲'
              WHEN (cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0) < 0
                THEN ABS(ROUND((cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1))::TEXT || '% ▼'
              ELSE COALESCE(ROUND((cur.tot_prev - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1), 0.0)::TEXT || '% -'
            END
          FROM (
            SELECT 
              SUM(TOT_SALAMT_PERV1Y) AS tot_prev,      -- 전년 동기간 총 매출 (Y-1)
              SUM(TOT_SALAMT_PERV2Y) AS tot_prev2       -- 전전년 동기간 총 매출 (Y-2)
            FROM regionmonitor.TB_INTRST_REGION        -- 테이블 이름 변경 적용
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur;

      SL4_p_9:
        sql: | # 2025년 매출액
          SELECT to_char(ROUND(SUM(TOT_SALAMT)/1000000, 0), 'FM999,999,999') || '백만'
          FROM regionmonitor.tb_sexdstn_selng
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL4_p_10:
        sql: | # 당해년도 vs 전전년도 매출 증감율(%)
          SELECT 
            CASE
              -- 당해년도(tot_cur) 대비 전전년도(tot_prev2) 증감율 계산
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0) > 0
                THEN ROUND((cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1)::TEXT || '% ▲'
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0) < 0
                THEN ABS(ROUND((cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1))::TEXT || '% ▼'
              ELSE COALESCE(ROUND((cur.tot_cur - COALESCE(cur.tot_prev2, 0)) * 100.0 / NULLIF(cur.tot_prev2, 0), 1), 0.0)::TEXT || '% -'
            END
          FROM (
            SELECT 
              SUM(TOT_SALAMT) AS tot_cur,             -- 현재 기간 총 매출액
              SUM(TOT_SALAMT_PERV2Y) AS tot_prev2      -- 전전년 동기간 총 매출액 (새 테이블 컬럼 사용)
            FROM regionmonitor.TB_INTRST_REGION        -- 테이블 이름 변경 적용
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur;
    
    charts:
      SL4_chart_1:
        category_sql: |-
          WITH p AS (SELECT CAST(SUBSTRING(:DATE_FROM,1,4) AS INT) y)
          SELECT (y-2)::TEXT FROM p
          UNION ALL SELECT (y-1)::TEXT FROM p
          UNION ALL SELECT (y)::TEXT FROM p;

        series:
          방문인구 수(만 명): |-
            SELECT val
            FROM (
              WITH sums AS (
                SELECT
                  SUM(t.TOT_VIPOP_PERV2Y)::NUMERIC/10000.0 AS y2y_val, -- 전전년 (Y-2)
                  SUM(t.TOT_VIPOP_PERV1Y)::NUMERIC/10000.0 AS y1y_val, -- 전년 (Y-1)
                  SUM(t.TOT_VIPOP)::NUMERIC/10000.0 AS cur_val         -- 당해년도 (Y)
                FROM regionmonitor.TB_INTRST_REGION t
                WHERE t.REGION_CD=:REGION_CD AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              )
              SELECT 1 ord, y2y_val AS val FROM sums -- Y-2
              UNION ALL
              SELECT 2, y1y_val FROM sums            -- Y-1
              UNION ALL
              SELECT 3, cur_val FROM sums            -- Y
            ) x ORDER BY ord;

          방문인구 수 증감률(%): |-
            WITH sums AS (
              SELECT
                COALESCE(SUM(t.TOT_VIPOP_PERV2Y), 0)::NUMERIC AS y2y_sum, -- 전전년 합계 (Y-2)
                COALESCE(SUM(t.TOT_VIPOP_PERV1Y), 0)::NUMERIC AS y1y_sum, -- 전년 합계 (Y-1)
                COALESCE(SUM(t.TOT_VIPOP), 0)::NUMERIC AS cur_sum         -- 당해년도 합계 (Y)
              FROM regionmonitor.TB_INTRST_REGION t
              WHERE t.REGION_CD=:REGION_CD AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            )
            SELECT r
            FROM (
              SELECT 1 ord, 0.0::NUMERIC AS r -- Y-2 (기준이므로 0%)
              UNION ALL
              SELECT 2, CASE WHEN s.y2y_sum = 0 THEN 0 ELSE ROUND((s.y1y_sum - s.y2y_sum) / NULLIF(s.y2y_sum, 0) * 100, 2) END -- Y-1 vs Y-2
              FROM sums s
              UNION ALL
              SELECT 3, CASE WHEN s.y1y_sum = 0 THEN 0 ELSE ROUND((s.cur_sum - s.y1y_sum) / NULLIF(s.y1y_sum, 0) * 100, 2) END -- Y vs Y-1
              FROM sums s
            ) s ORDER BY ord;
            

      # -----------------------------
      # SL4_chart_2 : 연도별 매출액 추이
      # -----------------------------
      SL4_chart_2:
        category_sql: |-
          WITH p AS (SELECT CAST(SUBSTRING(:DATE_FROM,1,4) AS INT) y)
          SELECT (y-2)::TEXT FROM p
          UNION ALL SELECT (y-1)::TEXT FROM p
          UNION ALL SELECT (y)::TEXT FROM p;

        series:
          매출액(백만원): |-
            SELECT val
            FROM (
              WITH sums AS (
                SELECT
                  SUM(t.TOT_SALAMT_PERV2Y)::NUMERIC/1000000 AS y2y_val, -- 전전년 (Y-2)
                  SUM(t.TOT_SALAMT_PERV1Y)::NUMERIC/1000000 AS y1y_val, -- 전년 (Y-1)
                  SUM(t.TOT_SALAMT)::NUMERIC/1000000 AS cur_val         -- 당해년도 (Y)
                FROM regionmonitor.TB_INTRST_REGION t
                WHERE t.REGION_CD=:REGION_CD AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              )
              SELECT 1 ord, y2y_val AS val FROM sums -- Y-2
              UNION ALL
              SELECT 2, y1y_val FROM sums            -- Y-1
              UNION ALL
              SELECT 3, cur_val FROM sums            -- Y
            ) x ORDER BY ord;

          매출액 증감률(%): |-
            WITH sums AS (
              SELECT
                COALESCE(SUM(t.TOT_SALAMT_PERV2Y), 0)::NUMERIC AS y2y_sum, -- 전전년 합계 (Y-2)
                COALESCE(SUM(t.TOT_SALAMT_PERV1Y), 0)::NUMERIC AS y1y_sum, -- 전년 합계 (Y-1)
                COALESCE(SUM(t.TOT_SALAMT), 0)::NUMERIC AS cur_sum         -- 당해년도 합계 (Y)
              FROM regionmonitor.TB_INTRST_REGION t
              WHERE t.REGION_CD=:REGION_CD AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            )
            SELECT r
            FROM (
              SELECT 1 ord, 0.0::NUMERIC AS r -- Y-2 (기준이므로 0%)
              UNION ALL
              SELECT 2, CASE WHEN s.y2y_sum = 0 THEN 0 ELSE ROUND((s.y1y_sum - s.y2y_sum) / NULLIF(s.y2y_sum, 0) * 100, 2) END -- Y-1 vs Y-2
              FROM sums s
              UNION ALL
              SELECT 3, CASE WHEN s.y1y_sum = 0 THEN 0 ELSE ROUND((s.cur_sum - s.y1y_sum) / NULLIF(s.y1y_sum, 0) * 100, 2) END -- Y vs Y-1
              FROM sums s
            ) s ORDER BY ord;


  - name : "5 : 방문인구 분석 요약"
    tokens:
      SL5_p_1:
        sql: | # 총 방문인구
          SELECT to_char(COALESCE(SUM(TOT_VIPOP), 0), 'FM999,999,999,999')
          FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL5_p_2:
        sql: | # 전년대비 방문인구 증감율(%)
          SELECT 
            CASE
              -- 당해년도(tot_cur) 대비 전년도(tot_prev) 증감율 계산
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0) > 0
                THEN ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1)::TEXT || '% ▲'
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0) < 0
                THEN ABS(ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1))::TEXT || '% ▼'
              ELSE COALESCE(ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1), 0.0)::TEXT || '% -'
            END
          FROM (
            -- **핵심 수정: 당해년도 합계와 전년도 합계를 단일 쿼리에서 구함**
            SELECT 
              SUM(TOT_VIPOP) AS tot_cur,             -- 현재 기간 총합
              SUM(TOT_VIPOP_PERV1Y) AS tot_prev      -- 전년 동기간 총합 (새 테이블 컬럼 사용)
            FROM regionmonitor.TB_INTRST_REGION      -- 테이블 이름 변경 적용
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur;


      SL5_p_3:
        sql: | # 최다 방문일(예: 10월 15일)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT to_char(to_date(STDR_YMD,'YYYYMMDD'), 'FMMM"월" FMDD"일"')
          FROM daily
          ORDER BY v DESC, STDR_YMD
          LIMIT 1;

      SL5_p_4:
        sql: | # 최다 방문일 방문자수(콤마)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT to_char(v, 'FM999,999,999,999')
          FROM daily
          ORDER BY v DESC, STDR_YMD
          LIMIT 1;

      SL5_p_5:
        sql: | # 최다 방문일 비중(%)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT ROUND(100.0 * v / NULLIF(SUM(v) OVER (),0), 1)
          FROM daily
          ORDER BY v DESC, STDR_YMD
          LIMIT 1;

      SL5_p_6:
        sql: | # 최다 방문 연령대
          WITH base AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS a20,
              COALESCE(SUM(GNR30_VIPOP),0) AS a30,
              COALESCE(SUM(GNR40_VIPOP),0) AS a40,
              COALESCE(SUM(GNR50_VIPOP),0) AS a50,
              COALESCE(SUM(GNR60_VIPOP),0) AS a60,
              COALESCE(SUM(GNR70_VIPOP),0) AS a70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          unpivot AS (
            SELECT '20대' AS seg, a20 AS v FROM base UNION ALL
            SELECT '30대', a30 FROM base UNION ALL
            SELECT '40대', a40 FROM base UNION ALL
            SELECT '50대', a50 FROM base UNION ALL
            SELECT '60대', a60 FROM base UNION ALL
            SELECT '70대', a70 FROM base
          )
          SELECT seg
          FROM unpivot
          ORDER BY v DESC, seg
          LIMIT 1;


      SL5_p_7:
        sql: | # 최다 방문 성연령 비중
          WITH base AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS a20,
              COALESCE(SUM(GNR30_VIPOP),0) AS a30,
              COALESCE(SUM(GNR40_VIPOP),0) AS a40,
              COALESCE(SUM(GNR50_VIPOP),0) AS a50,
              COALESCE(SUM(GNR60_VIPOP),0) AS a60,
              COALESCE(SUM(GNR70_VIPOP),0) AS a70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          unpivot AS (
            SELECT '20대' AS seg, a20 AS v FROM base UNION ALL
            SELECT '30대', a30 FROM base UNION ALL
            SELECT '40대', a40 FROM base UNION ALL
            SELECT '50대', a50 FROM base UNION ALL
            SELECT '60대', a60 FROM base UNION ALL
            SELECT '70대', a70 FROM base
          )
          SELECT ROUND(100.0 * v / NULLIF(SUM(v) OVER (), 0), 1)
          FROM unpivot
          ORDER BY v DESC, seg
          LIMIT 1;

      SL5_p_8:
        sql: | # 피크타임 라벨(일자별 피크 빈도 최다)
          -- SL3_p_10과 동일 쿼리 사용 가능
          WITH base AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d,
                  SUM(T0_T6_VIPOP)  AS T0_6, SUM(T7_VIPOP)  AS T7,  SUM(T8_VIPOP)  AS T8,
                  SUM(T9_VIPOP)     AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
                  SUM(T12_VIPOP)    AS T12,  SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
                  SUM(T15_VIPOP)    AS T15,  SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
                  SUM(T18_VIPOP)    AS T18,  SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
                  SUM(T21_VIPOP)    AS T21,  SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          unpivot AS (
            SELECT d, h, v
            FROM base b, LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          day_peak AS (
            SELECT d, h FROM (
              SELECT d, h, v, ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) rn
              FROM unpivot
            ) s WHERE rn = 1
          ),
          freq AS (SELECT h, COUNT(*) AS days_cnt FROM day_peak GROUP BY h)
          SELECT h FROM freq ORDER BY days_cnt DESC, h LIMIT 1;

      SL5_p_9:
        sql: | # 피크타임 '일 평균' 방문인구(콤마)
          -- SL3_p_11과 동일 로직
          WITH base AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d,
                  SUM(T0_T6_VIPOP) AS T0_6, SUM(T7_VIPOP) AS T7,  SUM(T8_VIPOP) AS T8,
                  SUM(T9_VIPOP) AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
                  SUM(T12_VIPOP) AS T12, SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
                  SUM(T15_VIPOP) AS T15, SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
                  SUM(T18_VIPOP) AS T18, SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
                  SUM(T21_VIPOP) AS T21, SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          unpivot AS (
            SELECT d, h, v FROM base b, LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          dpk AS (
            SELECT d, h FROM (
              SELECT d, h, v, ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) rn
              FROM unpivot
            ) s WHERE rn = 1
          ),
          freq AS (SELECT h, COUNT(*) AS days_cnt FROM dpk GROUP BY h),
          best AS (SELECT h FROM freq ORDER BY days_cnt DESC, h LIMIT 1)
          SELECT to_char(
                  ROUND(AVG(
                    CASE (SELECT h FROM best)
                      WHEN '00-06' THEN T0_6 WHEN '07' THEN T7 WHEN '08' THEN T8 WHEN '09' THEN T9
                      WHEN '10' THEN T10 WHEN '11' THEN T11 WHEN '12' THEN T12 WHEN '13' THEN T13
                      WHEN '14' THEN T14 WHEN '15' THEN T15 WHEN '16' THEN T16 WHEN '17' THEN T17
                      WHEN '18' THEN T18 WHEN '19' THEN T19 WHEN '20' THEN T20 WHEN '21' THEN T21
                      WHEN '22' THEN T22 ELSE T23 END
                  )),
                  'FM999,999,999,999'
                )
          FROM base;

      SL5_p_10:
        sql: | # 피크타임 비중(%): (해당 시간대 일평균) / (일평균 전체) × 100
          -- SL3_p_12와 동일 로직
          WITH base AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d,
                  SUM(T0_T6_VIPOP) AS T0_6, SUM(T7_VIPOP) AS T7,  SUM(T8_VIPOP) AS T8,
                  SUM(T9_VIPOP) AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
                  SUM(T12_VIPOP) AS T12, SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
                  SUM(T15_VIPOP) AS T15, SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
                  SUM(T18_VIPOP) AS T18, SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
                  SUM(T21_VIPOP) AS T21, SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          day_total AS (
            SELECT d, (T0_6+T7+T8+T9+T10+T11+T12+T13+T14+T15+T16+T17+T18+T19+T20+T21+T22+T23)::numeric AS tot
            FROM base
          ),
          unpivot AS (
            SELECT d, h, v FROM base b, LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          dpk AS (
            SELECT d, h FROM (
              SELECT d, h, v, ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) rn
              FROM unpivot
            ) s WHERE rn = 1
          ),
          freq AS (SELECT h, COUNT(*) AS days_cnt FROM dpk GROUP BY h),
          best AS (SELECT h FROM freq ORDER BY days_cnt DESC, h LIMIT 1)
          SELECT ROUND(
                  100.0 * AVG(
                    CASE (SELECT h FROM best)
                      WHEN '00-06' THEN T0_6 WHEN '07' THEN T7 WHEN '08' THEN T8 WHEN '09' THEN T9
                      WHEN '10' THEN T10 WHEN '11' THEN T11 WHEN '12' THEN T12 WHEN '13' THEN T13
                      WHEN '14' THEN T14 WHEN '15' THEN T15 WHEN '16' THEN T16 WHEN '17' THEN T17
                      WHEN '18' THEN T18 WHEN '19' THEN T19 WHEN '20' THEN T20 WHEN '21' THEN T21
                      WHEN '22' THEN T22 ELSE T23 END
                  ) / NULLIF(AVG(tot),0),
                  1
                )
          FROM base JOIN day_total USING (d);


      # 최다 유입 지역
      SL5_p_11:
        sql: |
          WITH o AS (
            SELECT
              COALESCE(SUM(WHTHRC_VIPOP), 0) AS in_v,
              COALESCE(SUM(NEARBY_VIPOP), 0) AS near_v,
              COALESCE(SUM(OUTHRC_VIPOP), 0) AS out_v 
            FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          u AS (
            SELECT '관내'::text AS nm, in_v  AS v FROM o
            UNION ALL
            SELECT '관외'        AS nm, out_v AS v FROM o
            UNION ALL
            SELECT '인접지역'     AS nm, near_v AS v FROM o
          )
          SELECT nm
          FROM u
          ORDER BY v DESC, nm
          LIMIT 1;


      # 최다 유입 지역 비중(%)
      SL5_p_12:
        sql: |
          WITH o AS (
            SELECT
              COALESCE(SUM(WHTHRC_VIPOP), 0) AS in_v,
              COALESCE(SUM(NEARBY_VIPOP), 0) AS near_v,
              COALESCE(SUM(OUTHRC_VIPOP), 0) AS out_v
            FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          u AS (
            SELECT '관내'::text AS nm, in_v  AS v FROM o
            UNION ALL
            SELECT '관외'        AS nm, out_v AS v FROM o
            UNION ALL
            SELECT '인접지역'     AS nm, near_v AS v FROM o
          )
          SELECT ROUND(100.0 * v / NULLIF(SUM(v) OVER (), 0), 1)
          FROM u
          ORDER BY v DESC, nm
          LIMIT 1;

      # 외국인 방문객 수 (콤마)
      SL5_p_13:
        sql: |
          SELECT to_char(COALESCE(SUM(FRGNR_VIPOP), 0), 'FM999,999,999,999')
          FROM regionmonitor.TB_NATION_VISIT_POPLTN
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      # 외국인 방문객 비중(%)
      SL5_p_14:
        sql: |
          WITH fr AS (
            SELECT COALESCE(SUM(FRGNR_VIPOP), 0) AS v
            FROM regionmonitor.TB_NATION_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          tot AS (
            SELECT COALESCE(SUM(TOT_VIPOP), 0) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT COALESCE(ROUND(100.0 * fr.v / NULLIF(tot.v, 0), 1), 0.0)
          FROM fr, tot;


    charts:
      SL5_chart_1:
        category_sql: |
          SELECT lbl FROM (VALUES ('남자'), ('여자')) v(lbl);
        series:
          방문인구(만 명): |
            SELECT val
            FROM (
              SELECT '남자' AS lbl,
                     SUM(MVIPOP)::NUMERIC / 10000.0 AS val
              FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '여자',
                     SUM(FVIPOP)::NUMERIC / 10000.0
              FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ) t
            ORDER BY lbl;

      # 2) 연령별 분포 (세로 막대) — 20대~70대 이상, 남+여 합계
      SL5_chart_2:
        category_sql: |
          SELECT lbl
          FROM (VALUES ('20대'), ('30대'), ('40대'), ('50대'), ('60대'), ('70대')) v(lbl);
        series:
          방문인구(만 명): |
            SELECT val
            FROM (
              SELECT '20대' AS lbl,
                     SUM(GNR20_VIPOP)::NUMERIC / 10000.0 AS val
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '30대',
                     SUM(GNR30_VIPOP)::NUMERIC / 10000.0
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '40대',
                     SUM(GNR40_VIPOP)::NUMERIC / 10000.0
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '50대',
                     SUM(GNR50_VIPOP)::NUMERIC / 10000.0
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '60대',
                     SUM(GNR60_VIPOP)::NUMERIC / 10000.0
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '70대',
                     SUM(GNR70_VIPOP)::NUMERIC / 10000.0
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ) t
            ORDER BY lbl;

      # 3) 유입지별 분포 (원형) — 관내/인접/관외
      SL5_chart_3:
        category_sql: |
          SELECT lbl FROM (VALUES ('관내'), ('인접'), ('관외')) v(lbl);
        series:
          방문인구(만 명): |
            SELECT val
            FROM (
              SELECT '관내' AS lbl,
                     SUM(WHTHRC_VIPOP)::NUMERIC / 10000.0 AS val
              FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '인접',
                     SUM(NEARBY_VIPOP)::NUMERIC / 10000.0
              FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '관외',
                     SUM(OUTHRC_VIPOP)::NUMERIC / 10000.0
              FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ) t;

      # 4) 내외국인 분포 (원형) — 내국인/외국인
      SL5_chart_4:
        category_sql: |
          SELECT lbl FROM (VALUES ('내국인'), ('외국인')) v(lbl);
        series:
          방문인구(만 명): |
            SELECT val
            FROM (
              SELECT '내국인' AS lbl,
                     SUM(NATIVE_VIPOP)::NUMERIC / 10000.0 AS val
              FROM regionmonitor.TB_NATION_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '외국인',
                     SUM(FRGNR_VIPOP)::NUMERIC / 10000.0
              FROM regionmonitor.TB_NATION_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ) t
            ORDER BY lbl;

      # 5) 일자별 방문인구 (꺾은선)
      SL5_chart_5:
        category_sql: |
          WITH d AS (
            SELECT gs::date AS dte
            FROM generate_series(
              to_date(:DATE_FROM, 'YYYYMMDD'),
              to_date(:DATE_TO,   'YYYYMMDD'),
              interval '1 day'
            ) gs
          )
          SELECT to_char(dte, 'MM.DD') FROM d ORDER BY dte;

        series:
          방문인구(만 명): |
            WITH d AS (
              SELECT gs::date AS dte
              FROM generate_series(
                to_date(:DATE_FROM, 'YYYYMMDD'),
                to_date(:DATE_TO,   'YYYYMMDD'),
                interval '1 day'
              ) gs
            ),
            agg AS (
              SELECT to_date(STDR_YMD, 'YYYYMMDD') AS dte,
                     SUM(TOT_VIPOP)::NUMERIC / 10000.0 AS val
              FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY 1
            )
            SELECT COALESCE(a.val, 0)
            FROM d
            LEFT JOIN agg a USING (dte)
            ORDER BY d.dte;

      SL5_chart_6:
        category_sql: |
          WITH cat AS (
            SELECT lbl, ord
            FROM unnest(
              ARRAY['0-6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23']
            ) WITH ORDINALITY AS t(lbl, ord)
          )
          SELECT lbl FROM cat ORDER BY ord;

        series:
          평균 방문인구(명): |
            WITH d AS (
              SELECT COUNT(DISTINCT STDR_YMD)::numeric AS days
              FROM regionmonitor.TB_TMZON_VISIT_POPLTN
              WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ),
            s AS (  -- 분자: 시간대별 합계
              SELECT
                SUM(COALESCE(T0_T6_VIPOP,0))  AS v0_6,
                SUM(COALESCE(T7_VIPOP,0))     AS v7,
                SUM(COALESCE(T8_VIPOP,0))     AS v8,
                SUM(COALESCE(T9_VIPOP,0))     AS v9,
                SUM(COALESCE(T10_VIPOP,0))    AS v10,
                SUM(COALESCE(T11_VIPOP,0))    AS v11,
                SUM(COALESCE(T12_VIPOP,0))    AS v12,
                SUM(COALESCE(T13_VIPOP,0))    AS v13,
                SUM(COALESCE(T14_VIPOP,0))    AS v14,
                SUM(COALESCE(T15_VIPOP,0))    AS v15,
                SUM(COALESCE(T16_VIPOP,0))    AS v16,
                SUM(COALESCE(T17_VIPOP,0))    AS v17,
                SUM(COALESCE(T18_VIPOP,0))    AS v18,
                SUM(COALESCE(T19_VIPOP,0))    AS v19,
                SUM(COALESCE(T20_VIPOP,0))    AS v20,
                SUM(COALESCE(T21_VIPOP,0))    AS v21,
                SUM(COALESCE(T22_VIPOP,0))    AS v22,
                SUM(COALESCE(T23_VIPOP,0))    AS v23
              FROM regionmonitor.TB_TMZON_VISIT_POPLTN
              WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ),
            avgv AS (
              SELECT
                (v0_6 / NULLIF((SELECT days FROM d),0)) AS a0_6,
                (v7   / NULLIF((SELECT days FROM d),0)) AS a7,
                (v8   / NULLIF((SELECT days FROM d),0)) AS a8,
                (v9   / NULLIF((SELECT days FROM d),0)) AS a9,
                (v10  / NULLIF((SELECT days FROM d),0)) AS a10,
                (v11  / NULLIF((SELECT days FROM d),0)) AS a11,
                (v12  / NULLIF((SELECT days FROM d),0)) AS a12,
                (v13  / NULLIF((SELECT days FROM d),0)) AS a13,
                (v14  / NULLIF((SELECT days FROM d),0)) AS a14,
                (v15  / NULLIF((SELECT days FROM d),0)) AS a15,
                (v16  / NULLIF((SELECT days FROM d),0)) AS a16,
                (v17  / NULLIF((SELECT days FROM d),0)) AS a17,
                (v18  / NULLIF((SELECT days FROM d),0)) AS a18,
                (v19  / NULLIF((SELECT days FROM d),0)) AS a19,
                (v20  / NULLIF((SELECT days FROM d),0)) AS a20,
                (v21  / NULLIF((SELECT days FROM d),0)) AS a21,
                (v22  / NULLIF((SELECT days FROM d),0)) AS a22,
                (v23  / NULLIF((SELECT days FROM d),0)) AS a23
              FROM s
            )
            SELECT val
            FROM (
              SELECT unnest(ARRAY[
                a0_6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23
              ]) AS val
              FROM avgv
            ) z;



  - name: "6 : 성별 방문인구"
    tokens:
      SL6_p_1:
        sql: | # 최다 방문 성별
          SELECT CASE WHEN cur.male >= cur.female THEN '남성' ELSE '여성' END
          FROM (
            SELECT SUM(MVIPOP)    AS male,
                   SUM(FVIPOP)    AS female,
                   SUM(TOT_VIPOP) AS total
            FROM regionmonitor.tb_sexdstn_visit_popltn
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur

      SL6_p_2:
        sql: | # 최소 방문 성별
          SELECT CASE WHEN cur.male < cur.female THEN '남성' ELSE '여성' END
          FROM (
            SELECT SUM(MVIPOP)    AS male,
                   SUM(FVIPOP)    AS female,
                   SUM(TOT_VIPOP) AS total
            FROM regionmonitor.tb_sexdstn_visit_popltn
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur

      SL6_p_3:
        sql: | # 성별 방문인구 비율 차이
          SELECT ROUND(
                   ABS(
                     (cur.male   * 100.0 / NULLIF(cur.total,0))
                     - (cur.female * 100.0 / NULLIF(cur.total,0))
                   ), 1
                 )
          FROM (
            SELECT SUM(MVIPOP)    AS male,
                   SUM(FVIPOP)    AS female,
                   SUM(TOT_VIPOP) AS total
            FROM regionmonitor.tb_sexdstn_visit_popltn
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur

      SL6_m:
        sql: | # 전년대비 남성 방문인구 수 증감율
          SELECT 
            CASE
              WHEN (cur.male - COALESCE(yoy.male_prev,0)) * 100.0 / NULLIF(yoy.male_prev,0) > 0
                THEN ROUND((cur.male - COALESCE(yoy.male_prev,0)) * 100.0 / NULLIF(yoy.male_prev,0), 1)::TEXT || '% ▲'
              WHEN (cur.male - COALESCE(yoy.male_prev,0)) * 100.0 / NULLIF(yoy.male_prev,0) < 0
                THEN ABS(ROUND((cur.male - COALESCE(yoy.male_prev,0)) * 100.0 / NULLIF(yoy.male_prev,0), 1))::TEXT || '% ▼'
              ELSE COALESCE(ROUND((cur.male - COALESCE(yoy.male_prev,0)) * 100.0 / NULLIF(yoy.male_prev,0), 1), 0.0)::TEXT || '% -'
            END
          FROM (
            SELECT SUM(MVIPOP) AS male
            FROM regionmonitor.tb_sexdstn_visit_popltn
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur
          LEFT JOIN (
            SELECT SUM(MVIPOP) AS male_prev
            FROM regionmonitor.tb_sexdstn_visit_popltn
            WHERE STDR_YMD BETWEEN
                  to_char(to_date(CAST(:DATE_FROM AS text),'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(CAST(:DATE_TO   AS text),'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND REGION_CD = :REGION_CD
          ) yoy ON TRUE
        fmt: signed_percent_1

      SL6_f:
        sql: | # 전년대비 여성 방문인구 수 증감율
          SELECT 
            CASE
              WHEN (cur.female - COALESCE(yoy.female_prev,0)) * 100.0 / NULLIF(yoy.female_prev,0) > 0
                THEN ROUND((cur.female - COALESCE(yoy.female_prev,0)) * 100.0 / NULLIF(yoy.female_prev,0), 1)::TEXT || '% ▲'
              WHEN (cur.female - COALESCE(yoy.female_prev,0)) * 100.0 / NULLIF(yoy.female_prev,0) < 0
                THEN ABS(ROUND((cur.female - COALESCE(yoy.female_prev,0)) * 100.0 / NULLIF(yoy.female_prev,0), 1))::TEXT || '% ▼'
              ELSE COALESCE(ROUND((cur.female - COALESCE(yoy.female_prev,0)) * 100.0 / NULLIF(yoy.female_prev,0), 1), 0.0)::TEXT || '% -'
            END
          FROM (
            SELECT SUM(FVIPOP) AS female
            FROM regionmonitor.tb_sexdstn_visit_popltn
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur
          LEFT JOIN (
            SELECT SUM(FVIPOP) AS female_prev
            FROM regionmonitor.tb_sexdstn_visit_popltn
            WHERE STDR_YMD BETWEEN
                  to_char(to_date(CAST(:DATE_FROM AS text),'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(CAST(:DATE_TO   AS text),'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND REGION_CD = :REGION_CD
          ) yoy ON TRUE
        fmt: signed_percent_1

    charts:
      SL6_chart:
        category_sql: |
          SELECT lbl FROM (VALUES ('남자'), ('여자')) v(lbl);
        series:
          방문인구(만 명): |
            SELECT val
            FROM (
              SELECT '남자' AS lbl,
                    (SUM(MVIPOP)::NUMERIC) AS val
              FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '여자',
                    SUM(FVIPOP)::NUMERIC
              FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ) t
            ORDER BY lbl;

  
  - name: "7 : 연령대별 방문인구"
    tokens:
      SL7_p_1:
        sql: | # 최다 방문 연령대
          WITH cur AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          u AS (
            SELECT '20대' AS age, A20 AS v FROM cur UNION ALL
            SELECT '30대', A30 FROM cur UNION ALL
            SELECT '40대', A40 FROM cur UNION ALL
            SELECT '50대', A50 FROM cur UNION ALL
            SELECT '60대', A60 FROM cur UNION ALL
            SELECT '70대', A70 FROM cur
          )
          SELECT age
          FROM u
          ORDER BY v DESC, age
          LIMIT 1;

      SL7_p_2:
        sql: | # 최소 방문 연령대 (예: '60대')
          WITH cur AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          u AS (
            SELECT '20대' AS age, A20 AS v FROM cur UNION ALL
            SELECT '30대', A30 FROM cur UNION ALL
            SELECT '40대', A40 FROM cur UNION ALL
            SELECT '50대', A50 FROM cur UNION ALL
            SELECT '60대', A60 FROM cur UNION ALL
            SELECT '70대', A70 FROM cur
          )
          SELECT age
          FROM u
          ORDER BY v ASC, age
          LIMIT 1;

      # ───────── 전년 대비 최대 증가/감소 연령층 (라벨 & 증감률%) ─────────
      SL7_p_3:
        sql: | # 전년 대비 '최대 증감' 연령층 라벨
          WITH cur AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          prv AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN
                to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
          ),
          u AS (
            SELECT '20대' AS age, A20 AS c, (SELECT A20 FROM prv) AS p FROM cur UNION ALL
            SELECT '30대', A30, (SELECT A30 FROM prv) FROM cur UNION ALL
            SELECT '40대', A40, (SELECT A40 FROM prv) FROM cur UNION ALL
            SELECT '50대', A50, (SELECT A50 FROM prv) FROM cur UNION ALL
            SELECT '60대', A60, (SELECT A60 FROM prv) FROM cur UNION ALL
            SELECT '70대', A70, (SELECT A70 FROM prv) FROM cur
          )
          SELECT age
          FROM (
            SELECT age, COALESCE(ROUND(100.0*(c-p)/NULLIF(p,0),1), 0.0) AS rt
            FROM u
          ) x
          ORDER BY rt DESC, age
          LIMIT 1;

      SL7_p_4:
        sql: | # 전년 대비 '최대 증감' 연령층 증감률(%)
          WITH cur AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          prv AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN
                to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
          ),
          u AS (
            SELECT '20대' AS age, A20 AS c, (SELECT A20 FROM prv) AS p FROM cur UNION ALL
            SELECT '30대', A30, (SELECT A30 FROM prv) FROM cur UNION ALL
            SELECT '40대', A40, (SELECT A40 FROM prv) FROM cur UNION ALL
            SELECT '50대', A50, (SELECT A50 FROM prv) FROM cur UNION ALL
            SELECT '60대', A60, (SELECT A60 FROM prv) FROM cur UNION ALL
            SELECT '70대', A70, (SELECT A70 FROM prv) FROM cur
          ),
          calc AS (
              SELECT 
                  age, 
                  COALESCE(ROUND(100.0*(c-p)/NULLIF(p,0),1), 0.0) AS rate
              FROM u
          )
          SELECT
              CASE
                  WHEN rate > 0 THEN rate::TEXT || '% ▲'
                  WHEN rate < 0 THEN ABS(rate)::TEXT || '% ▼' 
                  ELSE rate::TEXT || '% -'
              END
          FROM calc
          ORDER BY rate DESC, age
          LIMIT 1;

      SL7_p_5:
        sql: | # 전년 대비 '최소 증감' 연령층 라벨
          WITH cur AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          prv AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN
                to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
          ),
          u AS (
            SELECT '20대' AS age, A20 AS c, (SELECT A20 FROM prv) AS p FROM cur UNION ALL
            SELECT '30대', A30, (SELECT A30 FROM prv) FROM cur UNION ALL
            SELECT '40대', A40, (SELECT A40 FROM prv) FROM cur UNION ALL
            SELECT '50대', A50, (SELECT A50 FROM prv) FROM cur UNION ALL
            SELECT '60대', A60, (SELECT A60 FROM prv) FROM cur UNION ALL
            SELECT '70대', A70, (SELECT A70 FROM prv) FROM cur
          )
          SELECT age
          FROM (
            SELECT age, COALESCE(ROUND(100.0*(c-p)/NULLIF(p,0),1), 0.0) AS rt
            FROM u
          ) x
          ORDER BY rt ASC, age
          LIMIT 1;

      SL7_p_6:
        sql: | # 전년 대비 '최소 증감' 연령층 증감률(%)
          WITH cur AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          prv AS (
            SELECT
              COALESCE(SUM(GNR20_VIPOP),0) AS A20,
              COALESCE(SUM(GNR30_VIPOP),0) AS A30,
              COALESCE(SUM(GNR40_VIPOP),0) AS A40,
              COALESCE(SUM(GNR50_VIPOP),0) AS A50,
              COALESCE(SUM(GNR60_VIPOP),0) AS A60,
              COALESCE(SUM(GNR70_VIPOP),0) AS A70
            FROM regionmonitor.TB_AGRDE_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN
                to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
          ),
          u AS (
            SELECT '20대' AS age, A20 AS c, (SELECT A20 FROM prv) AS p FROM cur UNION ALL
            SELECT '30대', A30, (SELECT A30 FROM prv) FROM cur UNION ALL
            SELECT '40대', A40, (SELECT A40 FROM prv) FROM cur UNION ALL
            SELECT '50대', A50, (SELECT A50 FROM prv) FROM cur UNION ALL
            SELECT '60대', A60, (SELECT A60 FROM prv) FROM cur UNION ALL
            SELECT '70대', A70, (SELECT A70 FROM prv) FROM cur
          ),
          calc AS (
              SELECT 
                  age, 
                  COALESCE(ROUND(100.0*(c-p)/NULLIF(p,0),1), 0.0) AS rate
              FROM u
          )
          SELECT
              CASE
                  WHEN rate > 0 THEN rate::TEXT || '% ▲'
                  WHEN rate < 0 THEN ABS(rate)::TEXT || '% ▼' 
                  ELSE rate::TEXT || '% -'
              END
          FROM calc
          ORDER BY rate ASC, age
          LIMIT 1;

    charts:
      SL7_chart:
        category_sql: |
          SELECT lbl
          FROM (VALUES ('20대'), ('30대'), ('40대'), ('50대'), ('60대'), ('70대')) v(lbl);
        series:
          방문인구(만명): |
            WITH p AS (
              SELECT :REGION_CD rc,
                     :DATE_FROM dfrom, :DATE_TO dto
            )
            SELECT val FROM (
              SELECT '20대' lbl, SUM(GNR20_VIPOP)::NUMERIC AS val
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p
              WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '30대', SUM(GNR30_VIPOP)
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p
              WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '40대', SUM(GNR40_VIPOP)
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p
              WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '50대', SUM(GNR50_VIPOP)
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p
              WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '60대', SUM(GNR60_VIPOP)
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p
              WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '70대', SUM(GNR70_VIPOP)
              FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p
              WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
            ) x ORDER BY lbl;

          전년 대비 증감률(%): |
            WITH p AS (
              SELECT :REGION_CD rc,
                     :DATE_FROM dfrom, :DATE_TO dto,
                     to_char(to_date(:DATE_FROM,'YYYYMMDD') - interval '1 year','YYYYMMDD') pfrom,
                     to_char(to_date(:DATE_TO,'YYYYMMDD') - interval '1 year','YYYYMMDD') pto
            ),
            cur AS (
              SELECT '20대' lbl, SUM(GNR20_VIPOP)::NUMERIC v FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '30대', SUM(GNR30_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '40대', SUM(GNR40_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '50대', SUM(GNR50_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '60대', SUM(GNR60_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
              UNION ALL SELECT '70대', SUM(GNR70_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.dfrom AND p.dto
            ),
            prv AS (
              SELECT '20대' lbl, SUM(GNR20_VIPOP)::NUMERIC v FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.pfrom AND p.pto
              UNION ALL SELECT '30대', SUM(GNR30_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.pfrom AND p.pto
              UNION ALL SELECT '40대', SUM(GNR40_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.pfrom AND p.pto
              UNION ALL SELECT '50대', SUM(GNR50_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.pfrom AND p.pto
              UNION ALL SELECT '60대', SUM(GNR60_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.pfrom AND p.pto
              UNION ALL SELECT '70대', SUM(GNR70_VIPOP) FROM regionmonitor.TB_AGRDE_VISIT_POPLTN t, p WHERE t.REGION_CD=p.rc AND t.STDR_YMD BETWEEN p.pfrom AND p.pto
            )
            SELECT CASE WHEN p.v IS NULL OR p.v=0 THEN 0 ELSE ROUND(((c.v - p.v)/p.v)*100, 2) END
            FROM cur c LEFT JOIN prv p USING(lbl)
            ORDER BY lbl;


  - name: "8: 일자별 방문인구 수"
    tokens:
      SL8_1:
        sql: | # 최대 방문일자 (예: 10월15일)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT to_char(to_date(STDR_YMD,'YYYYMMDD'), 'FMMM"월 "FMDD"일"')
          FROM daily
          ORDER BY v DESC, STDR_YMD
          LIMIT 1;

      SL8_share_1:
        sql: | # 최대 방문일자 비중(%)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT ROUND(100.0 * v / NULLIF(SUM(v) OVER (),0), 1)
          FROM daily
          ORDER BY v DESC, STDR_YMD
          LIMIT 1;

      SL8_2:
        sql: | # 최소 방문일자 (예: 10월15일)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT to_char(to_date(STDR_YMD,'YYYYMMDD'), 'FMMM"월 "FMDD"일"')
          FROM daily
          ORDER BY v ASC, STDR_YMD
          LIMIT 1;

      SL8_share_2:
        sql: | # 최소 방문일자 비중(%)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT ROUND(100.0 * v / NULLIF(SUM(v) OVER (),0), 1)
          FROM daily
          ORDER BY v ASC, STDR_YMD
          LIMIT 1;

      # ───────── 전체/주중/주말 일평균 방문인구 ─────────
      SL8_3:
        sql: | # 일평균 방문인구수(콤마)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT to_char(ROUND(AVG(v)), 'FM999,999,999,999')
          FROM daily;

      SL8_share_3:
        sql: | # 전체 일평균 비중(%) — 기간 총합 대비(항상 100에 수렴)
          WITH daily AS (
            SELECT STDR_YMD, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT ROUND(100.0 * (AVG(v) * COUNT(*)) / NULLIF(SUM(v),0), 1)
          FROM daily;

      SL8_4:
        sql: | # 주중(월~금) 일평균 방문인구수(콤마)
          WITH daily AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY to_date(STDR_YMD,'YYYYMMDD')
          ),
          wk AS (
            SELECT v FROM daily WHERE EXTRACT(ISODOW FROM d) BETWEEN 1 AND 5  -- 1=Mon..5=Fri
          )
          SELECT to_char(ROUND(AVG(v)), 'FM999,999,999,999')
          FROM wk;

      SL8_share_4:
        sql: | # 주중 방문 총합 비중(%)
          WITH daily AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY to_date(STDR_YMD,'YYYYMMDD')
          )
          SELECT ROUND(
                  100.0 * COALESCE(SUM(v) FILTER (WHERE EXTRACT(ISODOW FROM d) BETWEEN 1 AND 5), 0)
                  / NULLIF(SUM(v), 0), 1
                )
          FROM daily;

      SL8_5:
        sql: | # 주말(토·일) 일평균 방문인구수(콤마)
          WITH daily AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY to_date(STDR_YMD,'YYYYMMDD')
          ),
          we AS (
            SELECT v FROM daily WHERE EXTRACT(ISODOW FROM d) IN (6,7)  -- 6=Sat,7=Sun
          )
          SELECT to_char(ROUND(AVG(v)), 'FM999,999,999,999')
          FROM we;

      SL8_share_5:
        sql: | # 주말 방문 총합 비중(%)
          WITH daily AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d, SUM(TOT_VIPOP) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY to_date(STDR_YMD,'YYYYMMDD')
          )
          SELECT ROUND(
                  100.0 * COALESCE(SUM(v) FILTER (WHERE EXTRACT(ISODOW FROM d) IN (6,7)), 0)
                  / NULLIF(SUM(v), 0), 1
                )
          FROM daily;


    charts:
      SL8_chart:   
        # X축: YYYYMMDD 범위를 하루 단위로 생성
        category_sql: |
          WITH d AS (
            SELECT gs::date AS dte
            FROM generate_series(
              to_date(:DATE_FROM, 'YYYYMMDD'),
              to_date(:DATE_TO,   'YYYYMMDD'),
              interval '1 day'
            ) gs
          )
          SELECT to_char(dte, 'MM.DD')
          FROM d
          ORDER BY dte;

        series:
          방문인구(명): |
            WITH d AS (
              SELECT gs::date AS dte
              FROM generate_series(
                to_date(:DATE_FROM, 'YYYYMMDD'),
                to_date(:DATE_TO,   'YYYYMMDD'),
                interval '1 day'
              ) gs
            ),
            agg AS (
              SELECT
                to_date(STDR_YMD, 'YYYYMMDD') AS dte,
                SUM(TOT_VIPOP)::NUMERIC/10000 AS val
              FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY 1
            )
            SELECT COALESCE(a.val, 0)
            FROM d
            LEFT JOIN agg a USING (dte)
            ORDER BY d.dte;

  - name: "9: 시간대별 방문인구 수"
    tokens:
      # ───────── 평일(월~금) ─────────
      SL9_1:
        sql: | # 평일 피크타임 라벨(일자별 피크 빈도 최다)
          WITH base AS (  -- 날짜별 시간대 합계
            SELECT
              to_date(STDR_YMD,'YYYYMMDD')::date AS d,
              SUM(T0_T6_VIPOP)  AS T0_6, SUM(T7_VIPOP)  AS T7,  SUM(T8_VIPOP)  AS T8,
              SUM(T9_VIPOP)     AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
              SUM(T12_VIPOP)    AS T12,  SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
              SUM(T15_VIPOP)    AS T15,  SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
              SUM(T18_VIPOP)    AS T18,  SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
              SUM(T21_VIPOP)    AS T21,  SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND EXTRACT(ISODOW FROM to_date(STDR_YMD,'YYYYMMDD')) BETWEEN 1 AND 5
            GROUP BY 1
          ),
          unpivot AS (  -- 날짜별 (라벨,값)
            SELECT d, h, v
            FROM base b,
            LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          day_peak AS ( -- 각 날짜의 피크(동률시 라벨 오름차순)
            SELECT d, h
            FROM (
              SELECT d, h, v,
                    ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) AS rn
              FROM unpivot
            ) s
            WHERE rn = 1
          ),
          freq AS ( -- 라벨별 피크로 꼽힌 일수
            SELECT h, COUNT(*) AS days_cnt
            FROM day_peak
            GROUP BY h
          )
          SELECT h
          FROM freq
          ORDER BY days_cnt DESC, h
          LIMIT 1;

      SL9_2:
        sql: | # 평일 비중(%): (피크시간대 '일평균') / (평일 '일평균 전체') × 100
          WITH base AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d,
                  SUM(T0_T6_VIPOP) AS T0_6, SUM(T7_VIPOP) AS T7,  SUM(T8_VIPOP) AS T8,
                  SUM(T9_VIPOP) AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
                  SUM(T12_VIPOP) AS T12, SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
                  SUM(T15_VIPOP) AS T15, SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
                  SUM(T18_VIPOP) AS T18, SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
                  SUM(T21_VIPOP) AS T21, SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND EXTRACT(ISODOW FROM to_date(STDR_YMD,'YYYYMMDD')) BETWEEN 1 AND 5
            GROUP BY 1
          ),
          unpivot AS (
            SELECT d, h, v FROM base b, LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          dpk AS (
            SELECT d, h FROM (
              SELECT d, h, v, ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) rn
              FROM unpivot
            ) s WHERE rn = 1
          ),
          freq AS (SELECT h, COUNT(*) AS days_cnt FROM dpk GROUP BY h),
          best AS (SELECT h FROM freq ORDER BY days_cnt DESC, h LIMIT 1)
          SELECT ROUND(
                  100.0 *
                  AVG(
                    CASE (SELECT h FROM best)
                      WHEN '00-06' THEN T0_6 WHEN '07' THEN T7 WHEN '08' THEN T8 WHEN '09' THEN T9
                      WHEN '10' THEN T10 WHEN '11' THEN T11 WHEN '12' THEN T12 WHEN '13' THEN T13
                      WHEN '14' THEN T14 WHEN '15' THEN T15 WHEN '16' THEN T16 WHEN '17' THEN T17
                      WHEN '18' THEN T18 WHEN '19' THEN T19 WHEN '20' THEN T20 WHEN '21' THEN T21
                      WHEN '22' THEN T22 ELSE T23 END
                  )
                  / NULLIF(AVG(T0_6+T7+T8+T9+T10+T11+T12+T13+T14+T15+T16+T17+T18+T19+T20+T21+T22+T23), 0),
                  1
                )
          FROM base;


      # ───────── 주말(토·일) ─────────
      SL9_3:
        sql: | # 주말 피크타임 라벨(일자별 피크 빈도 최다)
          WITH base AS (
            SELECT
              to_date(STDR_YMD,'YYYYMMDD')::date AS d,
              SUM(T0_T6_VIPOP)  AS T0_6, SUM(T7_VIPOP)  AS T7,  SUM(T8_VIPOP)  AS T8,
              SUM(T9_VIPOP)     AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
              SUM(T12_VIPOP)    AS T12,  SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
              SUM(T15_VIPOP)    AS T15,  SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
              SUM(T18_VIPOP)    AS T18,  SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
              SUM(T21_VIPOP)    AS T21,  SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND EXTRACT(ISODOW FROM to_date(STDR_YMD,'YYYYMMDD')) IN (6,7)
            GROUP BY 1
          ),
          unpivot AS (
            SELECT d, h, v
            FROM base b,
            LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          day_peak AS (
            SELECT d, h
            FROM (
              SELECT d, h, v,
                    ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) AS rn
              FROM unpivot
            ) s
            WHERE rn = 1
          ),
          freq AS (
            SELECT h, COUNT(*) AS days_cnt
            FROM day_peak
            GROUP BY h
          )
          SELECT h
          FROM freq
          ORDER BY days_cnt DESC, h
          LIMIT 1;

      SL9_4:
        sql: | # 주말 비중(%): (피크시간대 '일평균') / (주말 '일평균 전체') × 100
          WITH base AS (
            SELECT to_date(STDR_YMD,'YYYYMMDD')::date AS d,
                  SUM(T0_T6_VIPOP) AS T0_6, SUM(T7_VIPOP) AS T7,  SUM(T8_VIPOP) AS T8,
                  SUM(T9_VIPOP) AS T9,   SUM(T10_VIPOP) AS T10, SUM(T11_VIPOP) AS T11,
                  SUM(T12_VIPOP) AS T12, SUM(T13_VIPOP) AS T13, SUM(T14_VIPOP) AS T14,
                  SUM(T15_VIPOP) AS T15, SUM(T16_VIPOP) AS T16, SUM(T17_VIPOP) AS T17,
                  SUM(T18_VIPOP) AS T18, SUM(T19_VIPOP) AS T19, SUM(T20_VIPOP) AS T20,
                  SUM(T21_VIPOP) AS T21, SUM(T22_VIPOP) AS T22, SUM(T23_VIPOP) AS T23
            FROM regionmonitor.TB_TMZON_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND EXTRACT(ISODOW FROM to_date(STDR_YMD,'YYYYMMDD')) IN (6,7)
            GROUP BY 1
          ),
          unpivot AS (
            SELECT d, h, v FROM base b, LATERAL (VALUES
              ('00-06', T0_6), ('07', T7), ('08', T8), ('09', T9), ('10', T10), ('11', T11),
              ('12', T12), ('13', T13), ('14', T14), ('15', T15), ('16', T16), ('17', T17),
              ('18', T18), ('19', T19), ('20', T20), ('21', T21), ('22', T22), ('23', T23)
            ) AS x(h, v)
          ),
          dpk AS (
            SELECT d, h FROM (
              SELECT d, h, v, ROW_NUMBER() OVER (PARTITION BY d ORDER BY v DESC, h) rn
              FROM unpivot
            ) s WHERE rn = 1
          ),
          freq AS (SELECT h, COUNT(*) AS days_cnt FROM dpk GROUP BY h),
          best AS (SELECT h FROM freq ORDER BY days_cnt DESC, h LIMIT 1)
          SELECT ROUND(
                  100.0 *
                  AVG(
                    CASE (SELECT h FROM best)
                      WHEN '00-06' THEN T0_6 WHEN '07' THEN T7 WHEN '08' THEN T8 WHEN '09' THEN T9
                      WHEN '10' THEN T10 WHEN '11' THEN T11 WHEN '12' THEN T12 WHEN '13' THEN T13
                      WHEN '14' THEN T14 WHEN '15' THEN T15 WHEN '16' THEN T16 WHEN '17' THEN T17
                      WHEN '18' THEN T18 WHEN '19' THEN T19 WHEN '20' THEN T20 WHEN '21' THEN T21
                      WHEN '22' THEN T22 ELSE T23 END
                  )
                  / NULLIF(AVG(T0_6+T7+T8+T9+T10+T11+T12+T13+T14+T15+T16+T17+T18+T19+T20+T21+T22+T23), 0),
                  1
                )
          FROM base;

    charts:
      SL9_chart:
        category_sql: |-
          SELECT lbl
          FROM (
            VALUES
              ('0~6시'), ('7시'), ('8시'), ('9시'), ('10시'), ('11시'),
              ('12시'), ('13시'), ('14시'), ('15시'), ('16시'),
              ('17시'), ('18시'), ('19시'), ('20시'), ('21시'),
              ('22시'), ('23시')
          ) v(lbl);

        series:
          평일 평균 방문인구(만명): |-
            WITH base AS (
              SELECT
                to_date(STDR_YMD,'YYYYMMDD') AS d,
                REGION_CD,
                T0_T6_VIPOP, T7_VIPOP, T8_VIPOP, T9_VIPOP, T10_VIPOP, T11_VIPOP,
                T12_VIPOP, T13_VIPOP, T14_VIPOP, T15_VIPOP, T16_VIPOP, T17_VIPOP,
                T18_VIPOP, T19_VIPOP, T20_VIPOP, T21_VIPOP, T22_VIPOP, T23_VIPOP
              FROM regionmonitor.TB_TMZON_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ),
            weekday AS (
              SELECT
                AVG(T0_T6_VIPOP)::NUMERIC/10000.0 AS t0,
                AVG(T7_VIPOP)::NUMERIC/10000.0   AS t7,
                AVG(T8_VIPOP)::NUMERIC/10000.0   AS t8,
                AVG(T9_VIPOP)::NUMERIC/10000.0   AS t9,
                AVG(T10_VIPOP)::NUMERIC/10000.0  AS t10,
                AVG(T11_VIPOP)::NUMERIC/10000.0  AS t11,
                AVG(T12_VIPOP)::NUMERIC/10000.0  AS t12,
                AVG(T13_VIPOP)::NUMERIC/10000.0  AS t13,
                AVG(T14_VIPOP)::NUMERIC/10000.0  AS t14,
                AVG(T15_VIPOP)::NUMERIC/10000.0  AS t15,
                AVG(T16_VIPOP)::NUMERIC/10000.0  AS t16,
                AVG(T17_VIPOP)::NUMERIC/10000.0  AS t17,
                AVG(T18_VIPOP)::NUMERIC/10000.0  AS t18,
                AVG(T19_VIPOP)::NUMERIC/10000.0  AS t19,
                AVG(T20_VIPOP)::NUMERIC/10000.0  AS t20,
                AVG(T21_VIPOP)::NUMERIC/10000.0  AS t21,
                AVG(T22_VIPOP)::NUMERIC/10000.0  AS t22,
                AVG(T23_VIPOP)::NUMERIC/10000.0  AS t23
              FROM base
              WHERE EXTRACT(DOW FROM d) BETWEEN 1 AND 5
            )
            SELECT UNNEST(ARRAY[
              t0, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16,
              t17, t18, t19, t20, t21, t22, t23
            ])
            FROM weekday;

          주말 평균 방문인구(만명): |-
            WITH base AS (
              SELECT
                to_date(STDR_YMD,'YYYYMMDD') AS d,
                REGION_CD,
                T0_T6_VIPOP, T7_VIPOP, T8_VIPOP, T9_VIPOP, T10_VIPOP, T11_VIPOP,
                T12_VIPOP, T13_VIPOP, T14_VIPOP, T15_VIPOP, T16_VIPOP, T17_VIPOP,
                T18_VIPOP, T19_VIPOP, T20_VIPOP, T21_VIPOP, T22_VIPOP, T23_VIPOP
              FROM regionmonitor.TB_TMZON_VISIT_POPLTN
              WHERE REGION_CD = :REGION_CD
                AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ),
            weekend AS (
              SELECT
                AVG(T0_T6_VIPOP)::NUMERIC/10000.0 AS t0,
                AVG(T7_VIPOP)::NUMERIC/10000.0   AS t7,
                AVG(T8_VIPOP)::NUMERIC/10000.0   AS t8,
                AVG(T9_VIPOP)::NUMERIC/10000.0   AS t9,
                AVG(T10_VIPOP)::NUMERIC/10000.0  AS t10,
                AVG(T11_VIPOP)::NUMERIC/10000.0  AS t11,
                AVG(T12_VIPOP)::NUMERIC/10000.0  AS t12,
                AVG(T13_VIPOP)::NUMERIC/10000.0  AS t13,
                AVG(T14_VIPOP)::NUMERIC/10000.0  AS t14,
                AVG(T15_VIPOP)::NUMERIC/10000.0  AS t15,
                AVG(T16_VIPOP)::NUMERIC/10000.0  AS t16,
                AVG(T17_VIPOP)::NUMERIC/10000.0  AS t17,
                AVG(T18_VIPOP)::NUMERIC/10000.0  AS t18,
                AVG(T19_VIPOP)::NUMERIC/10000.0  AS t19,
                AVG(T20_VIPOP)::NUMERIC/10000.0  AS t20,
                AVG(T21_VIPOP)::NUMERIC/10000.0  AS t21,
                AVG(T22_VIPOP)::NUMERIC/10000.0  AS t22,
                AVG(T23_VIPOP)::NUMERIC/10000.0  AS t23
              FROM base
              WHERE EXTRACT(DOW FROM d) IN (0,6)
            )
            SELECT UNNEST(ARRAY[
              t0, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16,
              t17, t18, t19, t20, t21, t22, t23
            ])
            FROM weekend;

  - name: "10: 유입지별 방문인구 수"
    tokens:
      SL10_1:
        sql: | # 최다 방문 구분 라벨(관내/인접지역/관외) — reserved word 회피
          WITH base AS (
            SELECT
              COALESCE(SUM(WHTHRC_VIPOP),0) AS in_local,
              COALESCE(SUM(NEARBY_VIPOP),0) AS nearby,
              COALESCE(SUM(OUTHRC_VIPOP),0) AS out_v   -- ← outer 금지
            FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          u AS (
            SELECT '관내'     AS gb, in_local AS v FROM base UNION ALL
            SELECT '인접지역' AS gb, nearby   AS v FROM base UNION ALL
            SELECT '관외'     AS gb, out_v    AS v FROM base
          )
          SELECT gb
          FROM u
          ORDER BY v DESC, gb
          LIMIT 1;


      SL10_2:
        sql: | # 관내 방문객(콤마)
          SELECT to_char(COALESCE(SUM(WHTHRC_VIPOP),0), 'FM999,999,999,999')
          FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL10_3:
        sql: | # 관내 전년대비 증감율(%)
          WITH cur AS (
            SELECT COALESCE(SUM(WHTHRC_VIPOP),0) AS v
            FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          yoy AS (
            SELECT COALESCE(SUM(WHTHRC_VIPOP),0) AS v
            FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN
                  to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
          )
          SELECT 
            CASE
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) > 0
                THEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% ▲'
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) < 0
                THEN ABS(COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0))::TEXT || '% ▼'
              ELSE COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% -'
            END
          FROM cur, yoy;

      SL10_4:
        sql: | # 인접지역 방문객(콤마)
          SELECT to_char(COALESCE(SUM(NEARBY_VIPOP),0), 'FM999,999,999,999')
          FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL10_5:
        sql: | # 인접지역 전년대비 증감율(%)
          WITH cur AS (
            SELECT COALESCE(SUM(NEARBY_VIPOP),0) AS v
            FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          yoy AS (
            SELECT COALESCE(SUM(NEARBY_VIPOP),0) AS v
            FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN
                  to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
          )
          SELECT 
            CASE
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) > 0
                THEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% ▲'
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) < 0
                THEN ABS(COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0))::TEXT || '% ▼'
              ELSE COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% -'
            END
          FROM cur, yoy;

      SL10_6:
        sql: | # 관외 방문객(콤마)
          SELECT to_char(COALESCE(SUM(OUTHRC_VIPOP),0), 'FM999,999,999,999')
          FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL10_7:
        sql: | # 관외 전년대비 증감율(%)
          WITH cur AS (
            SELECT COALESCE(SUM(OUTHRC_VIPOP),0) AS v
            FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          yoy AS (
            SELECT COALESCE(SUM(OUTHRC_VIPOP),0) AS v
            FROM regionmonitor.TB_INFLOW_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN
                  to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
          )
          SELECT 
            CASE
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) > 0
                THEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% ▲'
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) < 0
                THEN ABS(COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0))::TEXT || '% ▼'
              ELSE COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% -'
            END

          FROM cur, yoy;


    charts:
      SL10_chart:
        category_sql: |-
          WITH p AS (SELECT CAST(SUBSTRING(:DATE_FROM,1,4) AS INT) y)
          SELECT (y-2)::TEXT FROM p
          UNION ALL SELECT (y-1)::TEXT FROM p
          UNION ALL SELECT (y)::TEXT FROM p;

        series:
          관내: |-
            WITH p AS (SELECT CAST(SUBSTRING(:DATE_FROM,1,4) AS INT) y, :DATE_FROM df, :DATE_TO dt),
            yrs_data AS (
              SELECT 1 ord, y-2 yy, df, dt FROM p
              UNION ALL SELECT 2, y-1, df, dt FROM p
              UNION ALL SELECT 3, y, df, dt FROM p
            )
            SELECT (
              SELECT COALESCE(SUM(t.WHTHRC_VIPOP),0)::NUMERIC/100000
              FROM regionmonitor.TB_INFLOW_VISIT_POPLTN t
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN
                    CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.df,1,4) AS INT) THEN yrs_data.df ELSE (yrs_data.yy::TEXT||'0101') END
                AND CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.dt,1,4) AS INT) THEN yrs_data.dt ELSE (yrs_data.yy::TEXT||'1231') END
            )
            FROM yrs_data ORDER BY ord;

          인접: |-
            WITH p AS (SELECT CAST(SUBSTRING(:DATE_FROM,1,4) AS INT) y, :DATE_FROM df, :DATE_TO dt),
            yrs_data AS (
              SELECT 1 ord, y-2 yy, df, dt FROM p
              UNION ALL SELECT 2, y-1, df, dt FROM p
              UNION ALL SELECT 3, y, df, dt FROM p
            )
            SELECT (
              SELECT COALESCE(SUM(t.NEARBY_VIPOP),0)::NUMERIC/100000
              FROM regionmonitor.TB_INFLOW_VISIT_POPLTN t
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN
                    CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.df,1,4) AS INT) THEN yrs_data.df ELSE (yrs_data.yy::TEXT||'0101') END
                AND CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.dt,1,4) AS INT) THEN yrs_data.dt ELSE (yrs_data.yy::TEXT||'1231') END
            )
            FROM yrs_data ORDER BY ord;

          관외: |-
            WITH p AS (SELECT CAST(SUBSTRING(:DATE_FROM,1,4) AS INT) y, :DATE_FROM df, :DATE_TO dt),
            yrs_data AS (
              SELECT 1 ord, y-2 yy, df, dt FROM p
              UNION ALL SELECT 2, y-1, df, dt FROM p
              UNION ALL SELECT 3, y, df, dt FROM p
            )
            SELECT (
              SELECT COALESCE(SUM(t.OUTHRC_VIPOP),0)::NUMERIC/100000
              FROM regionmonitor.TB_INFLOW_VISIT_POPLTN t
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN
                    CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.df,1,4) AS INT) THEN yrs_data.df ELSE (yrs_data.yy::TEXT||'0101') END
                AND CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.dt,1,4) AS INT) THEN yrs_data.dt ELSE (yrs_data.yy::TEXT||'1231') END
            )
            FROM yrs_data ORDER BY ord;

  - name: "11 : 내국인 vs 외국인 방문 비교"
    tokens:
      SL11_1:
        sql: | # 더 많이 방문한 구분 ('내국인' or '외국인')
          WITH base AS (
            SELECT
              COALESCE(SUM(NATIVE_VIPOP),0) AS nat,
              COALESCE(SUM(FRGNR_VIPOP),0)  AS frn
            FROM regionmonitor.TB_NATION_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT CASE WHEN nat >= frn THEN '내국인' ELSE '외국인' END FROM base;

      SL11_2:
        sql: | # 내외국인 방문인구 비율 차이
          WITH base AS (
            SELECT
              COALESCE(SUM(NATIVE_VIPOP),0) AS nat,
              COALESCE(SUM(FRGNR_VIPOP),0)  AS frn
            FROM regionmonitor.TB_NATION_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT ROUND(ABS((nat::numeric / NULLIF(nat + frn, 0)) - (frn::numeric / NULLIF(nat + frn, 0))) * 100, 1)
          FROM base;


      SL11_3:
        sql: | # 내국인 방문객수(콤마)
          SELECT to_char(COALESCE(SUM(NATIVE_VIPOP),0), 'FM999,999,999,999')
          FROM regionmonitor.TB_NATION_VISIT_POPLTN
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL11_4:
        sql: | # 내국인 전년 대비 증감률(%)
          WITH cur AS (
            SELECT COALESCE(SUM(NATIVE_VIPOP),0) AS v
            FROM regionmonitor.TB_NATION_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          yoy AS (
            SELECT COALESCE(SUM(NATIVE_VIPOP),0) AS v
            FROM regionmonitor.TB_NATION_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN
                  to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
          )
          SELECT 
            CASE
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) > 0
                THEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% ▲'
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) < 0
                THEN ABS(COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0))::TEXT || '% ▼'
              ELSE COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% -'
            END
          FROM cur, yoy;

      SL11_5:
        sql: | # 외국인 방문객수(콤마)
          SELECT to_char(COALESCE(SUM(FRGNR_VIPOP),0), 'FM999,999,999,999')
          FROM regionmonitor.TB_NATION_VISIT_POPLTN
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL11_6:
        sql: | # 외국인 전년 대비 증감률(%)
          WITH cur AS (
            SELECT COALESCE(SUM(FRGNR_VIPOP),0) AS v
            FROM regionmonitor.TB_NATION_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          yoy AS (
            SELECT COALESCE(SUM(FRGNR_VIPOP),0) AS v
            FROM regionmonitor.TB_NATION_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN
                  to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
              AND to_char(to_date(:DATE_TO  ,'YYYYMMDD') - INTERVAL '1 year','YYYYMMDD')
          )
          SELECT 
            CASE
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) > 0
                THEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% ▲'
              WHEN COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0) < 0
                THEN ABS(COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0))::TEXT || '% ▼'
              ELSE COALESCE(ROUND(100.0*(cur.v - yoy.v)/NULLIF(yoy.v,0),1), 0.0)::TEXT || '% -'
            END
          FROM cur, yoy;

    charts:
      SL11_chart:
        category_sql: |-
          WITH p AS (SELECT CAST(SUBSTRING(:DATE_FROM,1,4) AS INT) y)
          SELECT (y-2)::TEXT FROM p
          UNION ALL SELECT (y-1)::TEXT FROM p
          UNION ALL SELECT (y)::TEXT FROM p;

        series:
          외국인: |-
            WITH p AS (SELECT CAST(SUBSTRING(:DATE_FROM,1,4) AS INT) y, :DATE_FROM df, :DATE_TO dt),
            yrs_data AS (
              SELECT 1 ord, y-2 yy, df, dt FROM p
              UNION ALL SELECT 2, y-1, df, dt FROM p
              UNION ALL SELECT 3, y, df, dt FROM p
            )
            SELECT (
              SELECT COALESCE(SUM(t.FRGNR_VIPOP),0)::NUMERIC/100000
              FROM regionmonitor.TB_NATION_VISIT_POPLTN t
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN
                    CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.df,1,4) AS INT) THEN yrs_data.df ELSE (yrs_data.yy::TEXT||'0101') END
                AND CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.dt,1,4) AS INT) THEN yrs_data.dt ELSE (yrs_data.yy::TEXT||'1231') END
            )
            FROM yrs_data ORDER BY ord;

          내국인: |-
            WITH p AS (SELECT CAST(SUBSTRING(:DATE_FROM,1,4) AS INT) y, :DATE_FROM df, :DATE_TO dt),
            yrs_data AS (
              SELECT 1 ord, y-2 yy, df, dt FROM p
              UNION ALL SELECT 2, y-1, df, dt FROM p
              UNION ALL SELECT 3, y, df, dt FROM p
            )
            SELECT (
              SELECT COALESCE(SUM(t.NATIVE_VIPOP),0)::NUMERIC/100000
              FROM regionmonitor.TB_NATION_VISIT_POPLTN t
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN
                    CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.df,1,4) AS INT) THEN yrs_data.df ELSE (yrs_data.yy::TEXT||'0101') END
                AND CASE WHEN yrs_data.yy = CAST(SUBSTRING(yrs_data.dt,1,4) AS INT) THEN yrs_data.dt ELSE (yrs_data.yy::TEXT||'1231') END
            )
            FROM yrs_data ORDER BY ord;


  - name: "12 : 소비 분석 요약"
    tokens:
      # 1) 총 소비금액 & 소비건수
      SL12_p_1:
        sql: | # 총 소비금액(백만원 단위)
          SELECT to_char(ROUND(COALESCE(SUM(TOT_SALAMT),0) /1000000.0, 0), 'FM999,999,999') || '백만원'
          FROM regionmonitor.TB_SEXDSTN_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL12_p_2:
        sql: | # 총 소비건수(콤마). 실제 건수 컬럼명 사용
          SELECT to_char(COALESCE(SUM(TOT_DCNT),0), 'FM999,999,999,999')
          FROM regionmonitor.TB_SEXDSTN_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL12_p_3:
        sql: | # 총 소비금액 전년대비 증감률(%)
          SELECT 
            CASE
              -- 당해년도(tot_cur) 대비 전년도(tot_prev) 증감률 계산
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0) > 0
                THEN ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1)::TEXT || '% ▲'
              WHEN (cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0) < 0
                THEN ABS(ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1))::TEXT || '% ▼'
              ELSE COALESCE(ROUND((cur.tot_cur - COALESCE(cur.tot_prev, 0)) * 100.0 / NULLIF(cur.tot_prev, 0), 1), 0.0)::TEXT || '% -'
            END
          FROM (
            -- **수정: 단일 쿼리로 현재 매출과 전년 매출 합산**
            SELECT 
              SUM(TOT_SALAMT) AS tot_cur,             -- 현재 기간 총 매출액
              SUM(TOT_SALAMT_PERV1Y) AS tot_prev      -- 전년 동기간 총 매출액
            FROM regionmonitor.TB_INTRST_REGION      -- 테이블 이름 변경 적용
            WHERE STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND REGION_CD = :REGION_CD
          ) cur;

      # 2) 1인당 평균 매출 (= 총매출 / 방문인구)
      SL12_p_4:
        sql: | # 1인당 평균 매출(원, 콤마)
          WITH sal AS (
            SELECT COALESCE(SUM(TOT_SALAMT),0) AS s
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          vis AS (
            SELECT COALESCE(SUM(TOT_VIPOP),0) AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT to_char(COALESCE(ROUND(s / NULLIF(v,0)),0), 'FM999,999,999,999') || '원'
          FROM sal, vis;

      SL12_p_5:
        sql: | # 1인당 평균 매출 전년대비 증감률(%)
          WITH totals AS (
            -- **수정: 단일 쿼리로 현재와 전년의 매출액 및 방문인구를 모두 합산**
            SELECT
              COALESCE(SUM(TOT_SALAMT), 0)::NUMERIC AS cur_s,           -- 현재 매출액
              COALESCE(SUM(TOT_VIPOP), 0)::NUMERIC AS cur_v,            -- 현재 방문인구
              COALESCE(SUM(TOT_SALAMT_PERV1Y), 0)::NUMERIC AS prev_s,   -- 전년 매출액
              COALESCE(SUM(TOT_VIPOP_PERV1Y), 0)::NUMERIC AS prev_v     -- 전년 방문인구
            FROM regionmonitor.TB_INTRST_REGION
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT 
            CASE
              -- 현재 1인당 평균: (t.cur_s / NULLIF(t.cur_v, 0))
              -- 전년 1인당 평균: (t.prev_s / NULLIF(t.prev_v, 0))
              WHEN COALESCE(ROUND(100.0 * (
                  (t.cur_s / NULLIF(t.cur_v, 0)) - (t.prev_s / NULLIF(t.prev_v, 0))
                ) / NULLIF((t.prev_s / NULLIF(t.prev_v, 0)), 0), 1), 0.0) > 0
                THEN COALESCE(ROUND(100.0 * ((t.cur_s / NULLIF(t.cur_v, 0)) - (t.prev_s / NULLIF(t.prev_v, 0))) / NULLIF((t.prev_s / NULLIF(t.prev_v, 0)), 0), 1), 0.0)::TEXT || '% ▲'
              WHEN COALESCE(ROUND(100.0 * (
                  (t.cur_s / NULLIF(t.cur_v, 0)) - (t.prev_s / NULLIF(t.prev_v, 0))
                ) / NULLIF((t.prev_s / NULLIF(t.prev_v, 0)), 0), 1), 0.0) < 0
                THEN ABS(COALESCE(ROUND(100.0 * ((t.cur_s / NULLIF(t.cur_v, 0)) - (t.prev_s / NULLIF(t.prev_v, 0))) / NULLIF((t.prev_s / NULLIF(t.prev_v, 0)), 0), 1), 0.0))::TEXT || '% ▼'
              ELSE COALESCE(ROUND(100.0 * (
                  (t.cur_s / NULLIF(t.cur_v, 0)) - (t.prev_s / NULLIF(t.prev_v, 0))
                ) / NULLIF((t.prev_s / NULLIF(t.prev_v, 0)), 0), 1), 0.0)::TEXT || '% -'
            END
          FROM totals t;

      # 3) 최다 매출 집단(연령) + 그 집단의 비중
      SL12_p_6:
        sql: | # 최다 매출 연령대 라벨(예: '30대')
          WITH a AS (
            SELECT
              COALESCE(SUM(GNR20_SALAMT),0) AS a20,
              COALESCE(SUM(GNR30_SALAMT),0) AS a30,
              COALESCE(SUM(GNR40_SALAMT),0) AS a40,
              COALESCE(SUM(GNR50_SALAMT),0) AS a50,
              COALESCE(SUM(GNR60_SALAMT),0) AS a60,
              COALESCE(SUM(GNR70_SALAMT),0) AS a70
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          u AS (
            SELECT '20대' AS seg, a20 AS v FROM a UNION ALL
            SELECT '30대', a30 FROM a UNION ALL
            SELECT '40대', a40 FROM a UNION ALL
            SELECT '50대', a50 FROM a UNION ALL
            SELECT '60대', a60 FROM a UNION ALL
            SELECT '70대', a70 FROM a
          )
          SELECT seg
          FROM u
          ORDER BY v DESC, seg
          LIMIT 1;

      SL12_p_7:
        sql: | # (SL12_p_6에서 선택된 연령대)의 전체 연령대 대비 비중(%)
          WITH cur AS (
            SELECT '20대' AS seg, COALESCE(SUM(GNR20_SALAMT),0) AS v
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '30대', COALESCE(SUM(GNR30_SALAMT),0)
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '40대', COALESCE(SUM(GNR40_SALAMT),0)
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '50대', COALESCE(SUM(GNR50_SALAMT),0)
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '60대', COALESCE(SUM(GNR60_SALAMT),0)
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '70대', COALESCE(SUM(GNR70_SALAMT),0)
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          mx AS (SELECT seg FROM cur ORDER BY v DESC, seg LIMIT 1)
          SELECT ROUND(100.0 * c.v / NULLIF((SELECT SUM(v) FROM cur), 0), 1)
          FROM cur c
          JOIN mx ON mx.seg = c.seg;


      # 4) TOP 업종 + 비중
      SL12_p_8:
        sql: | # 최다 매출 업종
          WITH cat AS (
            SELECT 
              SVC_INDUTY_SCLAS_CD AS cd,
              COALESCE(SUM(TOT_SALAMT), 0) AS v
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM cat c
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON c.cd = i.svc_induty_sclas_cd
          ORDER BY c.v DESC, c.cd
          LIMIT 1;


      SL12_p_9:
        sql: | # 최다 매출 업종 비중(%)
          WITH cat AS (
            SELECT SVC_INDUTY_SCLAS_CD AS cd,
                  COALESCE(SUM(TOT_SALAMT),0) AS v
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT ROUND(100.0 * v / NULLIF(SUM(v) OVER (),0), 1)
          FROM cat
          ORDER BY v DESC, cd
          LIMIT 1;

      # 5) 최대 매출일자 + 비중
      SL12_p_10:
        sql: | # 최대 매출일자(예: 10월15일)
          WITH d AS (
            SELECT STDR_YMD, COALESCE(SUM(TOT_SALAMT),0) AS v
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT to_char(to_date(STDR_YMD,'YYYYMMDD'), 'FMMM"월"FMDD"일"')
          FROM d
          ORDER BY v DESC, STDR_YMD
          LIMIT 1;

      SL12_p_11:
        sql: | # 최대 매출일자 비중(%)
          WITH d AS (
            SELECT STDR_YMD, COALESCE(SUM(TOT_SALAMT),0) AS v
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
          )
          SELECT ROUND(100.0 * v / NULLIF(SUM(v) OVER (),0), 1)
          FROM d
          ORDER BY v DESC, STDR_YMD
          LIMIT 1;

      # 6) 최대 소비 유입지 + 비중
      SL12_p_12:
        sql: | # 최대 소비 유입지 라벨('관내'/'인접'/'관외')
          WITH b AS (
            SELECT
              COALESCE(SUM(WHTHRC_SALAMT), 0) AS in_local,
              COALESCE(SUM(NEARBY_SALAMT), 0) AS near_local,
              COALESCE(SUM(OUTHRC_SALAMT), 0) AS out_local
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          u AS (
            SELECT '관내'  AS gb, in_local   AS v FROM b
            UNION ALL
            SELECT '인접'  AS gb, near_local AS v FROM b
            UNION ALL
            SELECT '관외'  AS gb, out_local  AS v FROM b
          )
          SELECT gb
          FROM u
          ORDER BY v DESC, gb
          LIMIT 1;

      SL12_p_13:
        sql: | # 최대 소비 유입지 비중(%)
          WITH b AS (
            SELECT
              COALESCE(SUM(WHTHRC_SALAMT), 0) AS in_local,
              COALESCE(SUM(NEARBY_SALAMT), 0) AS near_local,
              COALESCE(SUM(OUTHRC_SALAMT), 0) AS out_local
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          u AS (
            SELECT '관내' AS gb, in_local   AS v FROM b
            UNION ALL
            SELECT '인접' AS gb, near_local AS v FROM b
            UNION ALL
            SELECT '관외' AS gb, out_local  AS v FROM b
          )
          SELECT ROUND(100.0 * v / NULLIF(SUM(v) OVER (), 0), 1)
          FROM u
          ORDER BY v DESC, gb
          LIMIT 1;


    charts:
      SL12_chart_1:
        category_sql: |- # 성별 매출 비율
          SELECT '남자' UNION ALL SELECT '여자';
        series:
          매출금액(백만원): |-
            SELECT SUM(t.MSALAMT)/1000000
            FROM regionmonitor.TB_SEXDSTN_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT SUM(t.FSALAMT)/1000000
            FROM regionmonitor.TB_SEXDSTN_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL12_chart_2:
        category_sql: |- # 매출금액 높은 연령대 top 3
          WITH age_sum AS (
            SELECT '20대' AS lbl, COALESCE(SUM(GNR20_SALAMT),0) AS amt
              FROM regionmonitor.tb_agrde_selng
              WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '30대', COALESCE(SUM(GNR30_SALAMT),0)
              FROM regionmonitor.tb_agrde_selng
              WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '40대', COALESCE(SUM(GNR40_SALAMT),0)
              FROM regionmonitor.tb_agrde_selng
              WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '50대', COALESCE(SUM(GNR50_SALAMT),0)
              FROM regionmonitor.tb_agrde_selng
              WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '60대', COALESCE(SUM(GNR60_SALAMT),0)
              FROM regionmonitor.tb_agrde_selng
              WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT '70대', COALESCE(SUM(GNR70_SALAMT),0)
              FROM regionmonitor.tb_agrde_selng
              WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT lbl FROM age_sum ORDER BY amt DESC LIMIT 3;
        series:
          매출금액(백만원): |-
            WITH age_sum AS (
              SELECT '20대' AS lbl, COALESCE(SUM(GNR20_SALAMT),0) AS amt
                FROM regionmonitor.tb_agrde_selng
                WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '30대', COALESCE(SUM(GNR30_SALAMT),0)
                FROM regionmonitor.tb_agrde_selng
                WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '40대', COALESCE(SUM(GNR40_SALAMT),0)
                FROM regionmonitor.tb_agrde_selng
                WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '50대', COALESCE(SUM(GNR50_SALAMT),0)
                FROM regionmonitor.tb_agrde_selng
                WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '60대', COALESCE(SUM(GNR60_SALAMT),0)
                FROM regionmonitor.tb_agrde_selng
                WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              UNION ALL
              SELECT '70대', COALESCE(SUM(GNR70_SALAMT),0)
                FROM regionmonitor.tb_agrde_selng
                WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            )
            SELECT amt/1000000 FROM age_sum ORDER BY amt DESC LIMIT 3;

      SL12_chart_3: # 유입지별 매출 비율
        category_sql: |-
          SELECT '관내' UNION ALL SELECT '인접' UNION ALL SELECT '관외';
        series:
          매출금액(백만원): |-
            SELECT COALESCE(SUM(WHTHRC_SALAMT),0)/1000000
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT COALESCE(SUM(NEARBY_SALAMT),0)/1000000
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL
            SELECT COALESCE(SUM(OUTHRC_SALAMT),0)/1000000
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;


      SL12_chart_4: # 매출금액 높은 업종 top5
        category_sql: |-
          WITH top_ind AS (
            SELECT i.svc_induty_sclas_cd_nm AS nm,
                  SUM(s.TOT_SALAMT) AS amt
            FROM regionmonitor.TB_SEXDSTN_SELNG s
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE s.REGION_CD=:REGION_CD AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY i.svc_induty_sclas_cd_nm
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top_ind ORDER BY amt DESC;
        series:
          매출금액(백만원): |-
            WITH top_ind AS (
              SELECT i.svc_induty_sclas_cd_nm AS nm,
                    SUM(s.TOT_SALAMT) AS amt
              FROM regionmonitor.TB_SEXDSTN_SELNG s
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE s.REGION_CD=:REGION_CD AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT amt/1000000 FROM top_ind ORDER BY amt DESC;

      SL12_chart_5: # 일자별 매출액
        category_sql: |- 
          SELECT TO_CHAR(TO_DATE(STDR_YMD,'YYYYMMDD'),'MM.DD')
          FROM (
            SELECT DISTINCT STDR_YMD
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            ORDER BY STDR_YMD
          );
        series:
          매출액(백만원): |-
            SELECT SUM(TOT_SALAMT)/1000000
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD=:REGION_CD AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY STDR_YMD
            ORDER BY STDR_YMD;



  - name: "13 : 업종별 소비 TOP"
    tokens:
      SL13_1:
        sql: | # 소비금액 1위 업종명
          SELECT i.svc_induty_sclas_cd_nm
          FROM regionmonitor.TB_TMZON_SELNG t
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY i.svc_induty_sclas_cd_nm, t.SVC_INDUTY_SCLAS_CD
          ORDER BY
            SUM(
              COALESCE(t.T0_T6_SALAMT,0)+COALESCE(t.T7_SALAMT,0)+COALESCE(t.T8_SALAMT,0)+COALESCE(t.T9_SALAMT,0)+
              COALESCE(t.T10_SALAMT,0)+COALESCE(t.T11_SALAMT,0)+COALESCE(t.T12_SALAMT,0)+COALESCE(t.T13_SALAMT,0)+
              COALESCE(t.T14_SALAMT,0)+COALESCE(t.T15_SALAMT,0)+COALESCE(t.T16_SALAMT,0)+COALESCE(t.T17_SALAMT,0)+
              COALESCE(t.T18_SALAMT,0)+COALESCE(t.T19_SALAMT,0)+COALESCE(t.T20_SALAMT,0)+COALESCE(t.T21_SALAMT,0)+
              COALESCE(t.T22_SALAMT,0)+COALESCE(t.T23_SALAMT,0)
            ) DESC,
            t.SVC_INDUTY_SCLAS_CD
          LIMIT 1;

      SL13_2:
        sql: | # 소비금액 1위 업종의 총금액(원)
          SELECT to_char(
                  SUM(
                    COALESCE(t.T0_T6_SALAMT,0)+COALESCE(t.T7_SALAMT,0)+COALESCE(t.T8_SALAMT,0)+COALESCE(t.T9_SALAMT,0)+
                    COALESCE(t.T10_SALAMT,0)+COALESCE(t.T11_SALAMT,0)+COALESCE(t.T12_SALAMT,0)+COALESCE(t.T13_SALAMT,0)+
                    COALESCE(t.T14_SALAMT,0)+COALESCE(t.T15_SALAMT,0)+COALESCE(t.T16_SALAMT,0)+COALESCE(t.T17_SALAMT,0)+
                    COALESCE(t.T18_SALAMT,0)+COALESCE(t.T19_SALAMT,0)+COALESCE(t.T20_SALAMT,0)+COALESCE(t.T21_SALAMT,0)+
                    COALESCE(t.T22_SALAMT,0)+COALESCE(t.T23_SALAMT,0)
                  ),
                  'FM999,999,999,999,999'
                )
          FROM regionmonitor.TB_TMZON_SELNG t
          WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY t.SVC_INDUTY_SCLAS_CD
          ORDER BY SUM(
            COALESCE(t.T0_T6_SALAMT,0)+COALESCE(t.T7_SALAMT,0)+COALESCE(t.T8_SALAMT,0)+COALESCE(t.T9_SALAMT,0)+
            COALESCE(t.T10_SALAMT,0)+COALESCE(t.T11_SALAMT,0)+COALESCE(t.T12_SALAMT,0)+COALESCE(t.T13_SALAMT,0)+
            COALESCE(t.T14_SALAMT,0)+COALESCE(t.T15_SALAMT,0)+COALESCE(t.T16_SALAMT,0)+COALESCE(t.T17_SALAMT,0)+
            COALESCE(t.T18_SALAMT,0)+COALESCE(t.T19_SALAMT,0)+COALESCE(t.T20_SALAMT,0)+COALESCE(t.T21_SALAMT,0)+
            COALESCE(t.T22_SALAMT,0)+COALESCE(t.T23_SALAMT,0)
          ) DESC,
          t.SVC_INDUTY_SCLAS_CD
          LIMIT 1;

      SL13_3:
        sql: | # 소비금액 1위 업종의 총건수(건)
          SELECT to_char(
                  SUM(
                    COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
                    COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
                    COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
                    COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
                    COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
                  ),
                  'FM999,999,999,999'
                )
          FROM regionmonitor.TB_TMZON_SELNG t
          WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY t.SVC_INDUTY_SCLAS_CD
          ORDER BY SUM(
            COALESCE(t.T0_T6_SALAMT,0)+COALESCE(t.T7_SALAMT,0)+COALESCE(t.T8_SALAMT,0)+COALESCE(t.T9_SALAMT,0)+
            COALESCE(t.T10_SALAMT,0)+COALESCE(t.T11_SALAMT,0)+COALESCE(t.T12_SALAMT,0)+COALESCE(t.T13_SALAMT,0)+
            COALESCE(t.T14_SALAMT,0)+COALESCE(t.T15_SALAMT,0)+COALESCE(t.T16_SALAMT,0)+COALESCE(t.T17_SALAMT,0)+
            COALESCE(t.T18_SALAMT,0)+COALESCE(t.T19_SALAMT,0)+COALESCE(t.T20_SALAMT,0)+COALESCE(t.T21_SALAMT,0)+
            COALESCE(t.T22_SALAMT,0)+COALESCE(t.T23_SALAMT,0)
          ) DESC,
          t.SVC_INDUTY_SCLAS_CD
          LIMIT 1;

      SL13_4:
        sql: | # 소비건수 1위 업종명
          SELECT i.svc_induty_sclas_cd_nm
          FROM regionmonitor.TB_TMZON_SELNG t
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY i.svc_induty_sclas_cd_nm, t.SVC_INDUTY_SCLAS_CD
          ORDER BY
            SUM(
              COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
              COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
              COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
              COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
              COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
            ) DESC,
            t.SVC_INDUTY_SCLAS_CD
          LIMIT 1;

      SL13_5:
        sql: | # 소비건수 1위 업종의 총금액(원)
          SELECT to_char(
                  SUM(
                    COALESCE(t.T0_T6_SALAMT,0)+COALESCE(t.T7_SALAMT,0)+COALESCE(t.T8_SALAMT,0)+COALESCE(t.T9_SALAMT,0)+
                    COALESCE(t.T10_SALAMT,0)+COALESCE(t.T11_SALAMT,0)+COALESCE(t.T12_SALAMT,0)+COALESCE(t.T13_SALAMT,0)+
                    COALESCE(t.T14_SALAMT,0)+COALESCE(t.T15_SALAMT,0)+COALESCE(t.T16_SALAMT,0)+COALESCE(t.T17_SALAMT,0)+
                    COALESCE(t.T18_SALAMT,0)+COALESCE(t.T19_SALAMT,0)+COALESCE(t.T20_SALAMT,0)+COALESCE(t.T21_SALAMT,0)+
                    COALESCE(t.T22_SALAMT,0)+COALESCE(t.T23_SALAMT,0)
                  ),
                  'FM999,999,999,999,999'
                )
          FROM regionmonitor.TB_TMZON_SELNG t
          WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY t.SVC_INDUTY_SCLAS_CD
          ORDER BY SUM(
            COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
            COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
            COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
            COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
            COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
          ) DESC,
          t.SVC_INDUTY_SCLAS_CD
          LIMIT 1;

      SL13_6:
        sql: | # 소비건수 1위 업종의 총건수(건)
          SELECT to_char(
                  SUM(
                    COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
                    COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
                    COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
                    COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
                    COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
                  ),
                  'FM999,999,999,999'
                )
          FROM regionmonitor.TB_TMZON_SELNG t
          WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY t.SVC_INDUTY_SCLAS_CD
          ORDER BY SUM(
            COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
            COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
            COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
            COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
            COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
          ) DESC,
          t.SVC_INDUTY_SCLAS_CD
          LIMIT 1;

      SL13_7:
        sql: | # 인당 평균매출액 1위 업종명 (amt/cnt)
          SELECT i.svc_induty_sclas_cd_nm
          FROM regionmonitor.TB_TMZON_SELNG t
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY i.svc_induty_sclas_cd_nm, t.SVC_INDUTY_SCLAS_CD
          ORDER BY
            ( SUM(
                COALESCE(t.T0_T6_SALAMT,0)+COALESCE(t.T7_SALAMT,0)+COALESCE(t.T8_SALAMT,0)+COALESCE(t.T9_SALAMT,0)+
                COALESCE(t.T10_SALAMT,0)+COALESCE(t.T11_SALAMT,0)+COALESCE(t.T12_SALAMT,0)+COALESCE(t.T13_SALAMT,0)+
                COALESCE(t.T14_SALAMT,0)+COALESCE(t.T15_SALAMT,0)+COALESCE(t.T16_SALAMT,0)+COALESCE(t.T17_SALAMT,0)+
                COALESCE(t.T18_SALAMT,0)+COALESCE(t.T19_SALAMT,0)+COALESCE(t.T20_SALAMT,0)+COALESCE(t.T21_SALAMT,0)+
                COALESCE(t.T22_SALAMT,0)+COALESCE(t.T23_SALAMT,0)
              )::numeric
              / NULLIF(
                SUM(
                  COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
                  COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
                  COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
                  COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
                  COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
                ), 0)
            ) DESC,
            t.SVC_INDUTY_SCLAS_CD
          LIMIT 1;

      SL13_8:
        sql: | # 인당 평균매출액 1위 업종의 평균금액(원)
          SELECT to_char(
            ( SUM(
                COALESCE(t.T0_T6_SALAMT,0)+COALESCE(t.T7_SALAMT,0)+COALESCE(t.T8_SALAMT,0)+COALESCE(t.T9_SALAMT,0)+
                COALESCE(t.T10_SALAMT,0)+COALESCE(t.T11_SALAMT,0)+COALESCE(t.T12_SALAMT,0)+COALESCE(t.T13_SALAMT,0)+
                COALESCE(t.T14_SALAMT,0)+COALESCE(t.T15_SALAMT,0)+COALESCE(t.T16_SALAMT,0)+COALESCE(t.T17_SALAMT,0)+
                COALESCE(t.T18_SALAMT,0)+COALESCE(t.T19_SALAMT,0)+COALESCE(t.T20_SALAMT,0)+COALESCE(t.T21_SALAMT,0)+
                COALESCE(t.T22_SALAMT,0)+COALESCE(t.T23_SALAMT,0)
              )::numeric
              / NULLIF(
                SUM(
                  COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
                  COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
                  COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
                  COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
                  COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
                ), 0)
            ),
            'FM999,999,999,999')
          FROM regionmonitor.TB_TMZON_SELNG t
          WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY t.SVC_INDUTY_SCLAS_CD
          ORDER BY
            ( SUM(
                COALESCE(t.T0_T6_SALAMT,0)+COALESCE(t.T7_SALAMT,0)+COALESCE(t.T8_SALAMT,0)+COALESCE(t.T9_SALAMT,0)+
                COALESCE(t.T10_SALAMT,0)+COALESCE(t.T11_SALAMT,0)+COALESCE(t.T12_SALAMT,0)+COALESCE(t.T13_SALAMT,0)+
                COALESCE(t.T14_SALAMT,0)+COALESCE(t.T15_SALAMT,0)+COALESCE(t.T16_SALAMT,0)+COALESCE(t.T17_SALAMT,0)+
                COALESCE(t.T18_SALAMT,0)+COALESCE(t.T19_SALAMT,0)+COALESCE(t.T20_SALAMT,0)+COALESCE(t.T21_SALAMT,0)+
                COALESCE(t.T22_SALAMT,0)+COALESCE(t.T23_SALAMT,0)
              )::numeric
              / NULLIF(
                SUM(
                  COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
                  COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
                  COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
                  COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
                  COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
                ), 0)
            ) DESC,
            t.SVC_INDUTY_SCLAS_CD
          LIMIT 1;

      SL13_9:
        sql: | # 인당 평균매출액 1위 업종의 총건수(건)
          SELECT to_char(
            SUM(
              COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
              COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
              COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
              COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
              COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
            ),
            'FM999,999,999,999')
          FROM regionmonitor.TB_TMZON_SELNG t
          WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY t.SVC_INDUTY_SCLAS_CD
          ORDER BY
            ( SUM(
                COALESCE(t.T0_T6_SALAMT,0)+COALESCE(t.T7_SALAMT,0)+COALESCE(t.T8_SALAMT,0)+COALESCE(t.T9_SALAMT,0)+
                COALESCE(t.T10_SALAMT,0)+COALESCE(t.T11_SALAMT,0)+COALESCE(t.T12_SALAMT,0)+COALESCE(t.T13_SALAMT,0)+
                COALESCE(t.T14_SALAMT,0)+COALESCE(t.T15_SALAMT,0)+COALESCE(t.T16_SALAMT,0)+COALESCE(t.T17_SALAMT,0)+
                COALESCE(t.T18_SALAMT,0)+COALESCE(t.T19_SALAMT,0)+COALESCE(t.T20_SALAMT,0)+COALESCE(t.T21_SALAMT,0)+
                COALESCE(t.T22_SALAMT,0)+COALESCE(t.T23_SALAMT,0)
              )::numeric
              / NULLIF(
                SUM(
                  COALESCE(t.T0_T6_DCNT,0)+COALESCE(t.T7_DCNT,0)+COALESCE(t.T8_DCNT,0)+COALESCE(t.T9_DCNT,0)+
                  COALESCE(t.T10_DCNT,0)+COALESCE(t.T11_DCNT,0)+COALESCE(t.T12_DCNT,0)+COALESCE(t.T13_DCNT,0)+
                  COALESCE(t.T14_DCNT,0)+COALESCE(t.T15_DCNT,0)+COALESCE(t.T16_DCNT,0)+COALESCE(t.T17_DCNT,0)+
                  COALESCE(t.T18_DCNT,0)+COALESCE(t.T19_DCNT,0)+COALESCE(t.T20_DCNT,0)+COALESCE(t.T21_DCNT,0)+
                  COALESCE(t.T22_DCNT,0)+COALESCE(t.T23_DCNT,0)
                ), 0)
            ) DESC,
            t.SVC_INDUTY_SCLAS_CD
          LIMIT 1;

    charts:
      SL13_chart_1:
        category_sql: |-
          WITH top10 AS (
            SELECT i.svc_induty_sclas_cd_nm AS nm,
                  SUM(s.TOT_SALAMT) AS amt
            FROM regionmonitor.TB_SEXDSTN_SELNG s
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE s.REGION_CD = :REGION_CD
              AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY i.svc_induty_sclas_cd_nm
            ORDER BY amt DESC
            LIMIT 10
          )
          SELECT nm FROM top10 ORDER BY amt DESC;

        series:
          매출금액(백만원): |-
            WITH top10 AS (
              SELECT i.svc_induty_sclas_cd_nm AS nm,
                    SUM(s.TOT_SALAMT) AS amt
              FROM regionmonitor.TB_SEXDSTN_SELNG s
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE s.REGION_CD = :REGION_CD
                AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 10
            )
            SELECT amt/1000000
            FROM top10
            ORDER BY amt DESC;

          매출건수(건): |-
            WITH top10 AS (
              SELECT i.svc_induty_sclas_cd_nm AS nm,
                    SUM(s.TOT_SALAMT) AS amt
              FROM regionmonitor.TB_SEXDSTN_SELNG s
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE s.REGION_CD = :REGION_CD
                AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 10
            )
            SELECT COALESCE((
              SELECT SUM(s.TOT_DCNT)::NUMERIC
              FROM regionmonitor.TB_SEXDSTN_SELNG s
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE s.REGION_CD = :REGION_CD
                AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
                AND i.svc_induty_sclas_cd_nm = top10.nm
            ),0)
            FROM top10
            ORDER BY top10.amt DESC;

      SL13_chart_2:
        category_sql: |-
          WITH avg10 AS (
            SELECT i.svc_induty_sclas_cd_nm AS nm,
                  SUM(s.TOT_SALAMT)        AS amt,
                  SUM(s.TOT_DCNT)          AS cnt
            FROM regionmonitor.TB_SEXDSTN_SELNG s
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE s.REGION_CD = :REGION_CD
              AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY i.svc_induty_sclas_cd_nm
          )
          SELECT nm
          FROM avg10
          WHERE cnt > 0
          ORDER BY (amt/NULLIF(cnt,0)) DESC
          LIMIT 10;

        series:
          인당평균매출액(만원): |-
            WITH avg10 AS (
              SELECT i.svc_induty_sclas_cd_nm AS nm,
                    SUM(s.TOT_SALAMT)        AS amt,
                    SUM(s.TOT_DCNT)          AS cnt
              FROM regionmonitor.TB_SEXDSTN_SELNG s
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE s.REGION_CD = :REGION_CD
                AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd_nm
            )
            SELECT (amt/NULLIF(cnt,0))/1e4
            FROM avg10
            WHERE cnt > 0
            ORDER BY (amt/NULLIF(cnt,0)) DESC
            LIMIT 10;



  - name: "14: 성별 소비"
    tokens:
      # [남성 소비 TOP3]
      SL14_1:
        sql: | # 남성 소비금액 1위 업종명
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(MSALAMT) AS amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM g JOIN regionmonitor.tb_svc_induty_sclas i
            ON g.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          ORDER BY amt DESC
          LIMIT 1;

      SL14_2:
        sql: | # 남성 소비금액 1위 업종 비중(%)
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(MSALAMT) AS m_amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          r AS (
            SELECT SVC_INDUTY_SCLAS_CD, m_amt,
                  SUM(m_amt) OVER () AS tot,
                  ROW_NUMBER() OVER (ORDER BY m_amt DESC, SVC_INDUTY_SCLAS_CD) rn
            FROM g
          )
          SELECT ROUND(100.0 * m_amt / NULLIF(tot,0), 1) FROM r WHERE rn = 1;

      SL14_3:
        sql: | # 남성 소비금액 2위 업종명
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(MSALAMT) AS amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM g JOIN regionmonitor.tb_svc_induty_sclas i
            ON g.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          ORDER BY amt DESC
          LIMIT 1 OFFSET 1;

      SL14_4:
        sql: | # 남성 소비금액 2위 업종 비중(%)
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(MSALAMT) AS m_amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          r AS (
            SELECT SVC_INDUTY_SCLAS_CD, m_amt,
                  SUM(m_amt) OVER () AS tot,
                  ROW_NUMBER() OVER (ORDER BY m_amt DESC, SVC_INDUTY_SCLAS_CD) rn
            FROM g
          )
          SELECT ROUND(100.0 * m_amt / NULLIF(tot,0), 1) FROM r WHERE rn = 2;

      SL14_5:
        sql: | # 남성 소비금액 3위 업종명
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(MSALAMT) AS amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM g JOIN regionmonitor.tb_svc_induty_sclas i
            ON g.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          ORDER BY amt DESC
          LIMIT 1 OFFSET 2;

      SL14_6:
        sql: | # 남성 소비금액 3위 업종 비중(%)
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(MSALAMT) AS m_amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          r AS (
            SELECT SVC_INDUTY_SCLAS_CD, m_amt,
                  SUM(m_amt) OVER () AS tot,
                  ROW_NUMBER() OVER (ORDER BY m_amt DESC, SVC_INDUTY_SCLAS_CD) rn
            FROM g
          )
          SELECT ROUND(100.0 * m_amt / NULLIF(tot,0), 1) FROM r WHERE rn = 3;

      # [여성 소비 TOP3]
      SL14_7:
        sql: | # 여성 소비금액 1위 업종명
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(FSALAMT) AS amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM g JOIN regionmonitor.tb_svc_induty_sclas i
            ON g.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          ORDER BY amt DESC
          LIMIT 1;

      SL14_8:
        sql: | # 여성 소비금액 1위 업종 비중(%)
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(FSALAMT) AS f_amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          r AS (
            SELECT SVC_INDUTY_SCLAS_CD, f_amt,
                  SUM(f_amt) OVER () AS tot,
                  ROW_NUMBER() OVER (ORDER BY f_amt DESC, SVC_INDUTY_SCLAS_CD) rn
            FROM g
          )
          SELECT ROUND(100.0 * f_amt / NULLIF(tot,0), 1) FROM r WHERE rn = 1;

      SL14_9:
        sql: | # 여성 소비금액 2위 업종명
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(FSALAMT) AS amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM g JOIN regionmonitor.tb_svc_induty_sclas i
            ON g.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          ORDER BY amt DESC
          LIMIT 1 OFFSET 1;

      SL14_10:
        sql: | # 여성 소비금액 2위 업종 비중(%)
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(FSALAMT) AS f_amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          r AS (
            SELECT SVC_INDUTY_SCLAS_CD, f_amt,
                  SUM(f_amt) OVER () AS tot,
                  ROW_NUMBER() OVER (ORDER BY f_amt DESC, SVC_INDUTY_SCLAS_CD) rn
            FROM g
          )
          SELECT ROUND(100.0 * f_amt / NULLIF(tot,0), 1) FROM r WHERE rn = 2;

      SL14_11:
        sql: | # 여성 소비금액 3위 업종명
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(FSALAMT) AS amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM g JOIN regionmonitor.tb_svc_induty_sclas i
            ON g.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          ORDER BY amt DESC
          LIMIT 1 OFFSET 2;

      SL14_12:
        sql: | # 여성 소비금액 3위 업종 비중(%)
          WITH g AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(FSALAMT) AS f_amt
            FROM regionmonitor.TB_SEXDSTN_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1
          ),
          r AS (
            SELECT SVC_INDUTY_SCLAS_CD, f_amt,
                  SUM(f_amt) OVER () AS tot,
                  ROW_NUMBER() OVER (ORDER BY f_amt DESC, SVC_INDUTY_SCLAS_CD) rn
            FROM g
          )
          SELECT ROUND(100.0 * f_amt / NULLIF(tot,0), 1) FROM r WHERE rn = 3;

    charts:
      SL14_chart:
        category_sql: |-
          WITH top10 AS (
            SELECT i.svc_induty_sclas_cd_nm AS nm,
                  SUM(s.TOT_SALAMT)        AS amt
            FROM regionmonitor.TB_SEXDSTN_SELNG s
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE s.REGION_CD = :REGION_CD
              AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY i.svc_induty_sclas_cd_nm
            ORDER BY amt DESC
            LIMIT 10
          )
          SELECT nm
          FROM top10
          ORDER BY amt DESC;

        series:
          남자(백만원): |-
            WITH top10 AS (
              SELECT i.svc_induty_sclas_cd_nm AS nm,
                    SUM(s.TOT_SALAMT)        AS amt
              FROM regionmonitor.TB_SEXDSTN_SELNG s
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE s.REGION_CD = :REGION_CD
                AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 10
            )
            SELECT COALESCE((
              SELECT SUM(s.MSALAMT)::NUMERIC/1000000
              FROM regionmonitor.TB_SEXDSTN_SELNG s
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE s.REGION_CD = :REGION_CD
                AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
                AND i.svc_induty_sclas_cd_nm = top10.nm
            ),0)
            FROM top10
            ORDER BY top10.amt DESC;

          여자(백만원): |-
            WITH top10 AS (
              SELECT i.svc_induty_sclas_cd_nm AS nm,
                    SUM(s.TOT_SALAMT)        AS amt
              FROM regionmonitor.TB_SEXDSTN_SELNG s
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE s.REGION_CD = :REGION_CD
                AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 10
            )
            SELECT COALESCE((
              SELECT SUM(s.FSALAMT)::NUMERIC/1000000
              FROM regionmonitor.TB_SEXDSTN_SELNG s
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON s.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE s.REGION_CD = :REGION_CD
                AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
                AND i.svc_induty_sclas_cd_nm = top10.nm
            ),0)
            FROM top10
            ORDER BY top10.amt DESC;


  - name: "15: 연령별 소비"
    tokens:
      # 전체에서 가장 많이 소비한 연령대(라벨) & 그 비중(%)
      SL15_1:
        sql: | # 최다 연령 라벨('20대'..'70대')
          WITH a AS (
            SELECT '20대' AS g, SUM(GNR20_SALAMT) AS amt FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '30대', SUM(GNR30_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '40대', SUM(GNR40_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '50대', SUM(GNR50_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '60대', SUM(GNR60_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '70대', SUM(GNR70_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT g FROM a ORDER BY amt DESC, g LIMIT 1;

      SL15_2:
        sql: | # 해당 연령 비중(%)
          WITH a AS (
            SELECT '20대' AS g, SUM(GNR20_SALAMT) AS amt FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '30대', SUM(GNR30_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '40대', SUM(GNR40_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '50대', SUM(GNR50_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '60대', SUM(GNR60_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            UNION ALL SELECT '70대', SUM(GNR70_SALAMT) FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT ROUND(100.0 * amt / NULLIF(SUM(amt) OVER (),0), 1)
          FROM a ORDER BY amt DESC, g LIMIT 1;

      # 연령대별 금액/비중(표 하단)
      SL15_3:
        sql: | # 20대 금액(원)
          WITH age AS (
            SELECT SUM(GNR20_SALAMT) AS v
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT to_char(ROUND(v/1000000, 0), 'FM999,999,999') || '백만' FROM age;


      SL15_4:
        sql: | # 20대 비중(%)
          WITH a AS (
            SELECT SUM(GNR20_SALAMT) AS v,
                  SUM(TOT_SALAMT) AS t
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT ROUND(100.0 * v / NULLIF(t,0), 1) FROM a;

      SL15_5:
        sql: | # 50대 금액(원)
          WITH age AS (
            SELECT SUM(GNR50_SALAMT) AS v
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT to_char(ROUND(v/1000000.0, 0), 'FM999,999,999') || '백만' FROM age;


      SL15_6:
        sql: | # 50대 비중(%)
          WITH a AS (
            SELECT SUM(GNR50_SALAMT) AS v,
                  SUM(TOT_SALAMT) AS t
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT ROUND(100.0 * v / NULLIF(t,0), 1) FROM a;

      SL15_7:
        sql: | # 30대 금액(원)
          WITH age AS (
            SELECT SUM(GNR30_SALAMT) AS v
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT to_char(ROUND(v/1000000, 0), 'FM999,999,999') || '백만' FROM age;


      SL15_8:
        sql: | # 30대 비중(%)
          WITH a AS (
            SELECT SUM(GNR30_SALAMT) AS v, SUM(TOT_SALAMT) AS t
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT ROUND(100.0 * v / NULLIF(t,0), 1) FROM a;

      SL15_9:
        sql: | # 60대 금액(원)
          WITH age AS (
            SELECT SUM(GNR60_SALAMT) AS v
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT to_char(ROUND(v/1000000, 0), 'FM999,999,999') || '백만' FROM age;


      SL15_10:
        sql: | # 60대 비중(%)
          WITH a AS (
            SELECT SUM(GNR60_SALAMT) AS v, SUM(TOT_SALAMT) AS t
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT ROUND(100.0 * v / NULLIF(t,0), 1) FROM a;

      SL15_11:
        sql: | # 40대 금액(원)
          WITH age AS (
            SELECT SUM(GNR40_SALAMT) AS v
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT to_char(ROUND(v/1000000, 0), 'FM999,999,999') || '백만' FROM age;


      SL15_12:
        sql: | # 40대 비중(%)
          WITH a AS (
            SELECT SUM(GNR40_SALAMT) AS v, SUM(TOT_SALAMT) AS t
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT ROUND(100.0 * v / NULLIF(t,0), 1) FROM a;

      SL15_13:
        sql: | # 70대 금액(원)
          WITH age AS (
            SELECT SUM(GNR70_SALAMT) AS v
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT to_char(ROUND(v/1000000, 0), 'FM999,999,999') || '백만' FROM age;


      SL15_14:
        sql: | # 70대 비중(%)
          WITH a AS (
            SELECT SUM(GNR70_SALAMT) AS v, SUM(TOT_SALAMT) AS t
            FROM regionmonitor.TB_AGRDE_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR) AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT ROUND(100.0 * v / NULLIF(t,0), 1) FROM a;

    charts:
      SL15_heatmap:  # 임의 키 (실제 도형명 아님)
        shape: "SL15_heatmap"          # PPT 도형 이름
        outfile: "out/img/SL15_heatmap.png" # 저장할 이미지 경로
        heatmap_sql: |-
          WITH s AS (
            SELECT
              t.SVC_INDUTY_SCLAS_CD AS cd,
              SUM(COALESCE(t.GNR20_SALAMT,0)) AS a20,
              SUM(COALESCE(t.GNR30_SALAMT,0)) AS a30,
              SUM(COALESCE(t.GNR40_SALAMT,0)) AS a40,
              SUM(COALESCE(t.GNR50_SALAMT,0)) AS a50,
              SUM(COALESCE(t.GNR60_SALAMT,0)) AS a60,
              SUM(COALESCE(t.GNR70_SALAMT,0)) AS a70
            FROM regionmonitor.TB_AGRDE_SELNG t
            WHERE t.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY t.SVC_INDUTY_SCLAS_CD
          ),
          st AS (
            SELECT cd, (a20+a30+a40+a50+a60+a70) AS tot,
                  a20, a30, a40, a50, a60, a70,
                  ROW_NUMBER() OVER (ORDER BY (a20+a30+a40+a50+a60+a70) DESC) AS rnk
            FROM s
          )
          SELECT
            i.svc_induty_sclas_cd_nm AS industry,
            COALESCE(ROUND(100.0 * a20 / NULLIF(tot,0), 1), 0.0) AS "20대",
            COALESCE(ROUND(100.0 * a30 / NULLIF(tot,0), 1), 0.0) AS "30대",
            COALESCE(ROUND(100.0 * a40 / NULLIF(tot,0), 1), 0.0) AS "40대",
            COALESCE(ROUND(100.0 * a50 / NULLIF(tot,0), 1), 0.0) AS "50대",
            COALESCE(ROUND(100.0 * a60 / NULLIF(tot,0), 1), 0.0) AS "60대",
            COALESCE(ROUND(100.0 * a70 / NULLIF(tot,0), 1), 0.0) AS "70대"
          FROM st
          LEFT JOIN regionmonitor.tb_svc_induty_sclas i
                ON st.cd = i.svc_induty_sclas_cd
          WHERE st.rnk <= 10
          ORDER BY industry;


  - name: "16: 매출 피크타임(금액 기준)"
    tokens:
      SL16_1:
        sql: | # 전체 피크타임(시)
          WITH s AS (
            SELECT
              SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
              SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
              SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
              SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
              SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT hr
          FROM (
            SELECT
              unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
              unnest(ARRAY[t0,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23]) AS amt
            FROM s
          ) x
          ORDER BY amt DESC, hr
          LIMIT 1;

      SL16_2:
        sql: | # 전체 매출 중 피크타임 비중(%)
          WITH s AS (
            SELECT
              SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
              SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
              SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
              SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
              SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT ROUND(
            (GREATEST(t0,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23)::numeric
            / NULLIF(t0+t7+t8+t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23,0)) * 100
          , 1)
          FROM s;

      # 업종별 총매출 상위 1~5위 업종코드와 각 업종의 피크타임(시)
      SL16_3:
        sql: | # 1위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (t0+t7+t8+t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL16_4:
        sql: | # 1위 업종 피크타임(시)
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ), top AS (
            SELECT SVC_INDUTY_SCLAS_CD
            FROM s
            ORDER BY (t0+t7+t8+t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) DESC
            LIMIT 1
          )
          SELECT hr
          FROM (
            SELECT
              unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
              unnest(ARRAY[s.t0,s.t7,s.t8,s.t9,s.t10,s.t11,s.t12,s.t13,s.t14,s.t15,s.t16,s.t17,s.t18,s.t19,s.t20,s.t21,s.t22,s.t23]) AS amt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x
          ORDER BY amt DESC, hr
          LIMIT 1;

      SL16_5:
        sql: | # 2위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (t0+t7+t8+ t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1 OFFSET 1
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL16_6:
        sql: | # 2위 업종 피크타임(시)
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ), top AS (
            SELECT SVC_INDUTY_SCLAS_CD
            FROM s
            ORDER BY (t0+t7+t8+t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) DESC
            LIMIT 1 OFFSET 1
          )
          SELECT hr
          FROM (
            SELECT
              unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
              unnest(ARRAY[s.t0,s.t7,s.t8,s.t9,s.t10,s.t11,s.t12,s.t13,s.t14,s.t15,s.t16,s.t17,s.t18,s.t19,s.t20,s.t21,s.t22,s.t23]) AS amt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x
          ORDER BY amt DESC, hr
          LIMIT 1;

      SL16_7:
        sql: | # 3위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (t0+t7+t8+ t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1 OFFSET 2
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL16_8:
        sql: | # 3위 업종 피크타임(시)
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ), top AS (
            SELECT SVC_INDUTY_SCLAS_CD
            FROM s
            ORDER BY (t0+t7+t8+t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) DESC
            LIMIT 1 OFFSET 2
          )
          SELECT hr
          FROM (
            SELECT
              unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
              unnest(ARRAY[s.t0,s.t7,s.t8,s.t9,s.t10,s.t11,s.t12,s.t13,s.t14,s.t15,s.t16,s.t17,s.t18,s.t19,s.t20,s.t21,s.t22,s.t23]) AS amt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x
          ORDER BY amt DESC, hr
          LIMIT 1;

      SL16_9:
        sql: | # 4위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (t0+t7+t8+ t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1 OFFSET 3
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL16_10:
        sql: | # 4위 업종 피크타임(시)
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ), top AS (
            SELECT SVC_INDUTY_SCLAS_CD
            FROM s
            ORDER BY (t0+t7+t8+t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) DESC
            LIMIT 1 OFFSET 3
          )
          SELECT hr
          FROM (
            SELECT
              unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
              unnest(ARRAY[s.t0,s.t7,s.t8,s.t9,s.t10,s.t11,s.t12,s.t13,s.t14,s.t15,s.t16,s.t17,s.t18,s.t19,s.t20,s.t21,s.t22,s.t23]) AS amt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x
          ORDER BY amt DESC, hr
          LIMIT 1;

      SL16_11:
        sql: | # 5위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (t0+t7+t8+ t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1 OFFSET 4
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL16_12:
        sql: | # 5위 업종 피크타임(시)
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_SALAMT) t0, SUM(T7_SALAMT) t7, SUM(T8_SALAMT) t8, SUM(T9_SALAMT) t9,
                  SUM(T10_SALAMT) t10, SUM(T11_SALAMT) t11, SUM(T12_SALAMT) t12, SUM(T13_SALAMT) t13,
                  SUM(T14_SALAMT) t14, SUM(T15_SALAMT) t15, SUM(T16_SALAMT) t16, SUM(T17_SALAMT) t17,
                  SUM(T18_SALAMT) t18, SUM(T19_SALAMT) t19, SUM(T20_SALAMT) t20, SUM(T21_SALAMT) t21,
                  SUM(T22_SALAMT) t22, SUM(T23_SALAMT) t23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ), top AS (
            SELECT SVC_INDUTY_SCLAS_CD
            FROM s
            ORDER BY (t0+t7+t8+t9+t10+t11+t12+t13+t14+t15+t16+t17+t18+t19+t20+t21+t22+t23) DESC
            LIMIT 1 OFFSET 4
          )
          SELECT hr
          FROM (
            SELECT
              unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
              unnest(ARRAY[s.t0,s.t7,s.t8,s.t9,s.t10,s.t11,s.t12,s.t13,s.t14,s.t15,s.t16,s.t17,s.t18,s.t19,s.t20,s.t21,s.t22,s.t23]) AS amt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x
          ORDER BY amt DESC, hr
          LIMIT 1;

      SL16_nm_1:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_SALAMT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 0;

      SL16_nm_2:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_SALAMT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 1;

      SL16_nm_3:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_SALAMT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 2;

      SL16_nm_4:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_SALAMT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 3;

      SL16_nm_5:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_SALAMT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 4;

    charts:
      SL16_chart:
        category_sql: |-
          SELECT lbl
          FROM (VALUES
            ('0-6시'), ('7시'), ('8시'), ('9시'), ('10시'), ('11시'),
            ('12시'), ('13시'), ('14시'), ('15시'), ('16시'),
            ('17시'), ('18시'), ('19시'), ('20시'), ('21시'),
            ('22시'), ('23시')
          ) v(lbl);

        series:
          업종1: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_SALAMT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0)/1000000,
              COALESCE(SUM(t.T7_SALAMT),0)/1000000,
              COALESCE(SUM(t.T8_SALAMT),0)/1000000,
              COALESCE(SUM(t.T9_SALAMT),0)/1000000,
              COALESCE(SUM(t.T10_SALAMT),0)/1000000,
              COALESCE(SUM(t.T11_SALAMT),0)/1000000,
              COALESCE(SUM(t.T12_SALAMT),0)/1000000,
              COALESCE(SUM(t.T13_SALAMT),0)/1000000,
              COALESCE(SUM(t.T14_SALAMT),0)/1000000,
              COALESCE(SUM(t.T15_SALAMT),0)/1000000,
              COALESCE(SUM(t.T16_SALAMT),0)/1000000,
              COALESCE(SUM(t.T17_SALAMT),0)/1000000,
              COALESCE(SUM(t.T18_SALAMT),0)/1000000,
              COALESCE(SUM(t.T19_SALAMT),0)/1000000,
              COALESCE(SUM(t.T20_SALAMT),0)/1000000,
              COALESCE(SUM(t.T21_SALAMT),0)/1000000,
              COALESCE(SUM(t.T22_SALAMT),0)/1000000,
              COALESCE(SUM(t.T23_SALAMT),0)/1000000
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 0);

          업종2: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_SALAMT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0)/1000000,
              COALESCE(SUM(t.T7_SALAMT),0)/1000000,
              COALESCE(SUM(t.T8_SALAMT),0)/1000000,
              COALESCE(SUM(t.T9_SALAMT),0)/1000000,
              COALESCE(SUM(t.T10_SALAMT),0)/1000000,
              COALESCE(SUM(t.T11_SALAMT),0)/1000000,
              COALESCE(SUM(t.T12_SALAMT),0)/1000000,
              COALESCE(SUM(t.T13_SALAMT),0)/1000000,
              COALESCE(SUM(t.T14_SALAMT),0)/1000000,
              COALESCE(SUM(t.T15_SALAMT),0)/1000000,
              COALESCE(SUM(t.T16_SALAMT),0)/1000000,
              COALESCE(SUM(t.T17_SALAMT),0)/1000000,
              COALESCE(SUM(t.T18_SALAMT),0)/1000000,
              COALESCE(SUM(t.T19_SALAMT),0)/1000000,
              COALESCE(SUM(t.T20_SALAMT),0)/1000000,
              COALESCE(SUM(t.T21_SALAMT),0)/1000000,
              COALESCE(SUM(t.T22_SALAMT),0)/1000000,
              COALESCE(SUM(t.T23_SALAMT),0)/1000000
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 1);

          업종3: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_SALAMT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0)/1000000,
              COALESCE(SUM(t.T7_SALAMT),0)/1000000,
              COALESCE(SUM(t.T8_SALAMT),0)/1000000,
              COALESCE(SUM(t.T9_SALAMT),0)/1000000,
              COALESCE(SUM(t.T10_SALAMT),0)/1000000,
              COALESCE(SUM(t.T11_SALAMT),0)/1000000,
              COALESCE(SUM(t.T12_SALAMT),0)/1000000,
              COALESCE(SUM(t.T13_SALAMT),0)/1000000,
              COALESCE(SUM(t.T14_SALAMT),0)/1000000,
              COALESCE(SUM(t.T15_SALAMT),0)/1000000,
              COALESCE(SUM(t.T16_SALAMT),0)/1000000,
              COALESCE(SUM(t.T17_SALAMT),0)/1000000,
              COALESCE(SUM(t.T18_SALAMT),0)/1000000,
              COALESCE(SUM(t.T19_SALAMT),0)/1000000,
              COALESCE(SUM(t.T20_SALAMT),0)/1000000,
              COALESCE(SUM(t.T21_SALAMT),0)/1000000,
              COALESCE(SUM(t.T22_SALAMT),0)/1000000,
              COALESCE(SUM(t.T23_SALAMT),0)/1000000
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 2);

          업종4: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_SALAMT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0)/1000000,
              COALESCE(SUM(t.T7_SALAMT),0)/1000000,
              COALESCE(SUM(t.T8_SALAMT),0)/1000000,
              COALESCE(SUM(t.T9_SALAMT),0)/1000000,
              COALESCE(SUM(t.T10_SALAMT),0)/1000000,
              COALESCE(SUM(t.T11_SALAMT),0)/1000000,
              COALESCE(SUM(t.T12_SALAMT),0)/1000000,
              COALESCE(SUM(t.T13_SALAMT),0)/1000000,
              COALESCE(SUM(t.T14_SALAMT),0)/1000000,
              COALESCE(SUM(t.T15_SALAMT),0)/1000000,
              COALESCE(SUM(t.T16_SALAMT),0)/1000000,
              COALESCE(SUM(t.T17_SALAMT),0)/1000000,
              COALESCE(SUM(t.T18_SALAMT),0)/1000000,
              COALESCE(SUM(t.T19_SALAMT),0)/1000000,
              COALESCE(SUM(t.T20_SALAMT),0)/1000000,
              COALESCE(SUM(t.T21_SALAMT),0)/1000000,
              COALESCE(SUM(t.T22_SALAMT),0)/1000000,
              COALESCE(SUM(t.T23_SALAMT),0)/1000000
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 3);

          업종5: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_SALAMT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0)/1000000,
              COALESCE(SUM(t.T7_SALAMT),0)/1000000,
              COALESCE(SUM(t.T8_SALAMT),0)/1000000,
              COALESCE(SUM(t.T9_SALAMT),0)/1000000,
              COALESCE(SUM(t.T10_SALAMT),0)/1000000,
              COALESCE(SUM(t.T11_SALAMT),0)/1000000,
              COALESCE(SUM(t.T12_SALAMT),0)/1000000,
              COALESCE(SUM(t.T13_SALAMT),0)/1000000,
              COALESCE(SUM(t.T14_SALAMT),0)/1000000,
              COALESCE(SUM(t.T15_SALAMT),0)/1000000,
              COALESCE(SUM(t.T16_SALAMT),0)/1000000,
              COALESCE(SUM(t.T17_SALAMT),0)/1000000,
              COALESCE(SUM(t.T18_SALAMT),0)/1000000,
              COALESCE(SUM(t.T19_SALAMT),0)/1000000,
              COALESCE(SUM(t.T20_SALAMT),0)/1000000,
              COALESCE(SUM(t.T21_SALAMT),0)/1000000,
              COALESCE(SUM(t.T22_SALAMT),0)/1000000,
              COALESCE(SUM(t.T23_SALAMT),0)/1000000
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 4);


  - name: "17: 매출 피크타임(건수 기준)"
    tokens:
      SL17_1:
        sql: | # 전체 피크타임(시)
          WITH s AS (
            SELECT
              SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
              SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
              SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
              SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
              SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT hr
          FROM (
            SELECT
              unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
              unnest(ARRAY[d0,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,d18,d19,d20,d21,d22,d23]) AS cnt
            FROM s
          ) x
          ORDER BY cnt DESC, hr
          LIMIT 1;

      SL17_2:
        sql: | # 전체 건수 중 피크타임 비중(%)
          WITH s AS (
            SELECT
              SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
              SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
              SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
              SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
              SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT ROUND(
            (GREATEST(d0,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,d18,d19,d20,d21,d22,d23)::numeric
            / NULLIF(d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23,0)) * 100
          , 1)
          FROM s;

      # 업종별 총건수 상위 1~5위 업종코드와 피크타임(시) — SL16 패턴 그대로 *_DCNT 사용
      SL17_3:
        sql: | # 1위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
                  SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
                  SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
                  SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
                  SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL17_4:
        sql: | # 1위 업종 피크타임(시)
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
                  SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
                  SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
                  SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
                  SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ), top AS (
            SELECT SVC_INDUTY_SCLAS_CD
            FROM s
            ORDER BY (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) DESC
            LIMIT 1
          )
          SELECT hr
          FROM (
            SELECT
              unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
              unnest(ARRAY[s.d0,s.d7,s.d8,s.d9,s.d10,s.d11,s.d12,s.d13,s.d14,s.d15,s.d16,s.d17,s.d18,s.d19,s.d20,s.d21,s.d22,s.d23]) AS cnt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x
          ORDER BY cnt DESC, hr
          LIMIT 1;

      SL17_5:
        sql: | # 2위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
                  SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
                  SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
                  SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
                  SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1 OFFSET 1
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL17_6:
        sql: | # 2위 업종 피크타임(시)
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
                  SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
                  SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
                  SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
                  SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ), top AS (
            SELECT SVC_INDUTY_SCLAS_CD
            FROM s
            ORDER BY (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) DESC
            LIMIT 1 OFFSET 1
          )
          SELECT hr
          FROM (
            SELECT
              unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
              unnest(ARRAY[s.d0,s.d7,s.d8,s.d9,s.d10,s.d11,s.d12,s.d13,s.d14,s.d15,s.d16,s.d17,s.d18,s.d19,s.d20,s.d21,s.d22,s.d23]) AS cnt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x
          ORDER BY cnt DESC, hr
          LIMIT 1;

      SL17_7:
        sql: | # 3위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
                  SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
                  SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
                  SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
                  SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1 OFFSET 2
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL17_8:
        sql: | # 3위 업종 피크타임(시)
          WITH s AS (SELECT SVC_INDUTY_SCLAS_CD,
            SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
            SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
            SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
            SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
            SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD FROM s
            ORDER BY (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) DESC
            LIMIT 1 OFFSET 2 )
          SELECT hr
          FROM (
            SELECT unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
                  unnest(ARRAY[s.d0,s.d7,s.d8,s.d9,s.d10,s.d11,s.d12,s.d13,s.d14,s.d15,s.d16,s.d17,s.d18,s.d19,s.d20,s.d21,s.d22,s.d23]) AS cnt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x ORDER BY cnt DESC, hr LIMIT 1;

      SL17_9:
        sql: | # 4위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
                  SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
                  SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
                  SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
                  SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1 OFFSET 3
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL17_10:
        sql: | # 4위 업종 피크타임(시)
          WITH s AS (SELECT SVC_INDUTY_SCLAS_CD,
            SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
            SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
            SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
            SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
            SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD FROM s
            ORDER BY (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) DESC
            LIMIT 1 OFFSET 3 )
          SELECT hr
          FROM (
            SELECT unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
                  unnest(ARRAY[s.d0,s.d7,s.d8,s.d9,s.d10,s.d11,s.d12,s.d13,s.d14,s.d15,s.d16,s.d17,s.d18,s.d19,s.d20,s.d21,s.d22,s.d23]) AS cnt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x ORDER BY cnt DESC, hr LIMIT 1;

      SL17_11:
        sql: | # 5위 업종코드
          WITH s AS (
            SELECT SVC_INDUTY_SCLAS_CD,
                  SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
                  SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
                  SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
                  SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
                  SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD, (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) AS tot
            FROM s ORDER BY tot DESC LIMIT 1 OFFSET 4
          )
          SELECT i.svc_induty_sclas_cd_nm
          FROM top
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON top.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL17_12:
        sql: | # 5위 업종 피크타임(시)
          WITH s AS (SELECT SVC_INDUTY_SCLAS_CD,
            SUM(T0_T6_DCNT) d0, SUM(T7_DCNT) d7, SUM(T8_DCNT) d8, SUM(T9_DCNT) d9,
            SUM(T10_DCNT) d10, SUM(T11_DCNT) d11, SUM(T12_DCNT) d12, SUM(T13_DCNT) d13,
            SUM(T14_DCNT) d14, SUM(T15_DCNT) d15, SUM(T16_DCNT) d16, SUM(T17_DCNT) d17,
            SUM(T18_DCNT) d18, SUM(T19_DCNT) d19, SUM(T20_DCNT) d20, SUM(T21_DCNT) d21,
            SUM(T22_DCNT) d22, SUM(T23_DCNT) d23
            FROM regionmonitor.TB_TMZON_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD),
          top AS (
            SELECT SVC_INDUTY_SCLAS_CD FROM s
            ORDER BY (d0+d7+d8+d9+d10+d11+d12+d13+d14+d15+d16+d17+d18+d19+d20+d21+d22+d23) DESC
            LIMIT 1 OFFSET 4 )
          SELECT hr
          FROM (
            SELECT unnest(ARRAY['0시-6시','7시','8시','9시','10시','11시','12시','13시','14시','15시','16시','17시','18시','19시','20시','21시','22시','23시']) AS hr,
                  unnest(ARRAY[s.d0,s.d7,s.d8,s.d9,s.d10,s.d11,s.d12,s.d13,s.d14,s.d15,s.d16,s.d17,s.d18,s.d19,s.d20,s.d21,s.d22,s.d23]) AS cnt
            FROM s JOIN top USING (SVC_INDUTY_SCLAS_CD)
          ) x ORDER BY cnt DESC, hr LIMIT 1;

      SL17_nm_1:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_DCNT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 0;

      SL17_nm_2:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_DCNT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 1;

      SL17_nm_3:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_DCNT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 2;

      SL17_nm_4:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_DCNT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 3;

      SL17_nm_5:
        sql: |-
          WITH top5 AS (
            SELECT i.svc_induty_sclas_cd AS cd,
                  i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.TOT_DCNT) AS amt
            FROM regionmonitor.TB_TMZON_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY 1,2
            ORDER BY amt DESC
            LIMIT 5
          )
          SELECT nm FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 4;

    charts:
      SL17_chart:
        category_sql: |-
          SELECT lbl
          FROM (VALUES
            ('0~6시'), ('7시'), ('8시'), ('9시'), ('10시'), ('11시'),
            ('12시'), ('13시'), ('14시'), ('15시'), ('16시'),
            ('17시'), ('18시'), ('19시'), ('20시'), ('21시'),
            ('22시'), ('23시')
          ) v(lbl);

        series:
          업종1: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_DCNT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0),
              COALESCE(SUM(t.T7_SALAMT),0),
              COALESCE(SUM(t.T8_SALAMT),0),
              COALESCE(SUM(t.T9_SALAMT),0),
              COALESCE(SUM(t.T10_SALAMT),0),
              COALESCE(SUM(t.T11_SALAMT),0),
              COALESCE(SUM(t.T12_SALAMT),0),
              COALESCE(SUM(t.T13_SALAMT),0),
              COALESCE(SUM(t.T14_SALAMT),0),
              COALESCE(SUM(t.T15_SALAMT),0),
              COALESCE(SUM(t.T16_SALAMT),0),
              COALESCE(SUM(t.T17_SALAMT),0),
              COALESCE(SUM(t.T18_SALAMT),0),
              COALESCE(SUM(t.T19_SALAMT),0),
              COALESCE(SUM(t.T20_SALAMT),0),
              COALESCE(SUM(t.T21_SALAMT),0),
              COALESCE(SUM(t.T22_SALAMT),0),
              COALESCE(SUM(t.T23_SALAMT),0)
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 0);

          업종2: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_DCNT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0),
              COALESCE(SUM(t.T7_SALAMT),0),
              COALESCE(SUM(t.T8_SALAMT),0),
              COALESCE(SUM(t.T9_SALAMT),0),
              COALESCE(SUM(t.T10_SALAMT),0),
              COALESCE(SUM(t.T11_SALAMT),0),
              COALESCE(SUM(t.T12_SALAMT),0),
              COALESCE(SUM(t.T13_SALAMT),0),
              COALESCE(SUM(t.T14_SALAMT),0),
              COALESCE(SUM(t.T15_SALAMT),0),
              COALESCE(SUM(t.T16_SALAMT),0),
              COALESCE(SUM(t.T17_SALAMT),0),
              COALESCE(SUM(t.T18_SALAMT),0),
              COALESCE(SUM(t.T19_SALAMT),0),
              COALESCE(SUM(t.T20_SALAMT),0),
              COALESCE(SUM(t.T21_SALAMT),0),
              COALESCE(SUM(t.T22_SALAMT),0),
              COALESCE(SUM(t.T23_SALAMT),0)
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 1);

          업종3: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_DCNT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0),
              COALESCE(SUM(t.T7_SALAMT),0),
              COALESCE(SUM(t.T8_SALAMT),0),
              COALESCE(SUM(t.T9_SALAMT),0),
              COALESCE(SUM(t.T10_SALAMT),0),
              COALESCE(SUM(t.T11_SALAMT),0),
              COALESCE(SUM(t.T12_SALAMT),0),
              COALESCE(SUM(t.T13_SALAMT),0),
              COALESCE(SUM(t.T14_SALAMT),0),
              COALESCE(SUM(t.T15_SALAMT),0),
              COALESCE(SUM(t.T16_SALAMT),0),
              COALESCE(SUM(t.T17_SALAMT),0),
              COALESCE(SUM(t.T18_SALAMT),0),
              COALESCE(SUM(t.T19_SALAMT),0),
              COALESCE(SUM(t.T20_SALAMT),0),
              COALESCE(SUM(t.T21_SALAMT),0),
              COALESCE(SUM(t.T22_SALAMT),0),
              COALESCE(SUM(t.T23_SALAMT),0)
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 2);

          업종4: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_DCNT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0),
              COALESCE(SUM(t.T7_SALAMT),0),
              COALESCE(SUM(t.T8_SALAMT),0),
              COALESCE(SUM(t.T9_SALAMT),0),
              COALESCE(SUM(t.T10_SALAMT),0),
              COALESCE(SUM(t.T11_SALAMT),0),
              COALESCE(SUM(t.T12_SALAMT),0),
              COALESCE(SUM(t.T13_SALAMT),0),
              COALESCE(SUM(t.T14_SALAMT),0),
              COALESCE(SUM(t.T15_SALAMT),0),
              COALESCE(SUM(t.T16_SALAMT),0),
              COALESCE(SUM(t.T17_SALAMT),0),
              COALESCE(SUM(t.T18_SALAMT),0),
              COALESCE(SUM(t.T19_SALAMT),0),
              COALESCE(SUM(t.T20_SALAMT),0),
              COALESCE(SUM(t.T21_SALAMT),0),
              COALESCE(SUM(t.T22_SALAMT),0),
              COALESCE(SUM(t.T23_SALAMT),0)
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 3);

          업종5: |-
            WITH top5 AS (
              SELECT i.svc_induty_sclas_cd AS cd,
                    i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.TOT_SALAMT) AS amt
              FROM regionmonitor.TB_TMZON_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd, i.svc_induty_sclas_cd_nm
              ORDER BY amt DESC
              LIMIT 5
            )
            SELECT UNNEST(ARRAY[
              COALESCE(SUM(t.T0_T6_SALAMT),0),
              COALESCE(SUM(t.T7_SALAMT),0),
              COALESCE(SUM(t.T8_SALAMT),0),
              COALESCE(SUM(t.T9_SALAMT),0),
              COALESCE(SUM(t.T10_SALAMT),0),
              COALESCE(SUM(t.T11_SALAMT),0),
              COALESCE(SUM(t.T12_SALAMT),0),
              COALESCE(SUM(t.T13_SALAMT),0),
              COALESCE(SUM(t.T14_SALAMT),0),
              COALESCE(SUM(t.T15_SALAMT),0),
              COALESCE(SUM(t.T16_SALAMT),0),
              COALESCE(SUM(t.T17_SALAMT),0),
              COALESCE(SUM(t.T18_SALAMT),0),
              COALESCE(SUM(t.T19_SALAMT),0),
              COALESCE(SUM(t.T20_SALAMT),0),
              COALESCE(SUM(t.T21_SALAMT),0),
              COALESCE(SUM(t.T22_SALAMT),0),
              COALESCE(SUM(t.T23_SALAMT),0)
            ])
            FROM regionmonitor.TB_TMZON_SELNG t
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              AND t.SVC_INDUTY_SCLAS_CD = (SELECT cd FROM top5 ORDER BY amt DESC LIMIT 1 OFFSET 4);
        


  - name: "18: 유입지별 소비"
    tokens:
      # 관내/관외/인접 : 금액, 건수, 최다 업종
      SL18_1:
        sql: | # 관내 금액
          SELECT to_char(ROUND(SUM(WHTHRC_SALAMT) / 1000000, 0), 'FM999,999,999,999')
          FROM regionmonitor.TB_INFLOW_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL18_2:
        sql: | # 관내 건수(콤마)
          SELECT to_char(SUM(WHTHRC_DCNT),'FM999,999,999,999')
          FROM regionmonitor.TB_INFLOW_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL18_3:
        sql: | # 관내 최다 매출 업종 (코드)
          SELECT i.svc_induty_sclas_cd_nm
          FROM (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(WHTHRC_SALAMT) AS amt
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
            ORDER BY amt DESC
            LIMIT 1
          ) t
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL18_4:
        sql: | # 관외 금액
          SELECT to_char(ROUND(SUM(OUTHRC_SALAMT) / 1000000, 0), 'FM999,999,999,999')
          FROM regionmonitor.TB_INFLOW_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL18_5:
        sql: | # 관외 건수
          SELECT to_char(SUM(OUTHRC_DCNT),'FM999,999,999,999')
          FROM regionmonitor.TB_INFLOW_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL18_6:
        sql: | # 관외 최다 매출 업종
          SELECT i.svc_induty_sclas_cd_nm
          FROM (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(OUTHRC_SALAMT) AS amt
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
            ORDER BY amt DESC
            LIMIT 1
          ) t
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL18_7:
        sql: | # 인접 금액
          SELECT to_char(ROUND(SUM(NEARBY_SALAMT) / 1000000, 0), 'FM999,999,999,999')
          FROM regionmonitor.TB_INFLOW_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL18_8:
        sql: | # 인접 건수
          SELECT to_char(SUM(NEARBY_DCNT),'FM999,999,999,999')
          FROM regionmonitor.TB_INFLOW_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL18_9:
        sql: | # 인접 최다 매출 업종
          SELECT i.svc_induty_sclas_cd_nm
          FROM (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(NEARBY_SALAMT) AS amt
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
            ORDER BY amt DESC
            LIMIT 1
          ) t
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      # 1인당 평균 소비액(=금액/건수) — 원 단위 유지
      SL18_10:
        sql: | # 관내 1인당 평균(원)
          WITH x AS (
            SELECT SUM(WHTHRC_SALAMT) AS a, SUM(WHTHRC_DCNT) AS c
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT to_char(a/NULLIF(c,0), 'FM999,999,999,999') FROM x;

      SL18_11:
        sql: | # 인접 1인당 평균(원)
          WITH x AS (
            SELECT SUM(NEARBY_SALAMT) AS a, SUM(NEARBY_DCNT) AS c
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT to_char(a/NULLIF(c,0), 'FM999,999,999,999') FROM x;

      SL18_12:
        sql: | # 관외 1인당 평균(원)
          WITH x AS (
            SELECT SUM(OUTHRC_SALAMT) AS a, SUM(OUTHRC_DCNT) AS c
            FROM regionmonitor.TB_INFLOW_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT to_char(a/NULLIF(c,0), 'FM999,999,999,999') FROM x;


    charts:
      SL18_chart:
        # X축: 소비금액(관내+인접+관외) 합계 기준 상위 10개 업종명
        category_sql: |-
          WITH top10 AS (
            SELECT i.svc_induty_sclas_cd_nm AS nm,
                  SUM(t.WHTHRC_SALAMT + t.NEARBY_SALAMT + t.OUTHRC_SALAMT) AS tot
            FROM regionmonitor.TB_INFLOW_SELNG t
            JOIN regionmonitor.tb_svc_induty_sclas i
              ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
            WHERE t.REGION_CD = :REGION_CD
              AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY i.svc_induty_sclas_cd_nm
            ORDER BY tot DESC
            LIMIT 10
          )
          SELECT nm FROM top10 ORDER BY tot DESC;

        series:
          관내(백만원): |-
            WITH top10 AS (
              SELECT i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.WHTHRC_SALAMT + t.NEARBY_SALAMT + t.OUTHRC_SALAMT) AS tot
              FROM regionmonitor.TB_INFLOW_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd_nm
              ORDER BY tot DESC
              LIMIT 10
            )
            SELECT COALESCE((
              SELECT SUM(t.WHTHRC_SALAMT)/1000000
              FROM regionmonitor.TB_INFLOW_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
                AND i.svc_induty_sclas_cd_nm = top10.nm
            ),0)
            FROM top10
            ORDER BY top10.tot DESC;

          인접(백만원): |-
            WITH top10 AS (
              SELECT i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.WHTHRC_SALAMT + t.NEARBY_SALAMT + t.OUTHRC_SALAMT) AS tot
              FROM regionmonitor.TB_INFLOW_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd_nm
              ORDER BY tot DESC
              LIMIT 10
            )
            SELECT COALESCE((
              SELECT SUM(t.NEARBY_SALAMT)/1000000
              FROM regionmonitor.TB_INFLOW_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
                AND i.svc_induty_sclas_cd_nm = top10.nm
            ),0)
            FROM top10
            ORDER BY top10.tot DESC;

          관외(백만원): |-
            WITH top10 AS (
              SELECT i.svc_induty_sclas_cd_nm AS nm,
                    SUM(t.WHTHRC_SALAMT + t.NEARBY_SALAMT + t.OUTHRC_SALAMT) AS tot
              FROM regionmonitor.TB_INFLOW_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
              GROUP BY i.svc_induty_sclas_cd_nm
              ORDER BY tot DESC
              LIMIT 10
            )
            SELECT COALESCE((
              SELECT SUM(t.OUTHRC_SALAMT)/1000000
              FROM regionmonitor.TB_INFLOW_SELNG t
              JOIN regionmonitor.tb_svc_induty_sclas i
                ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
              WHERE t.REGION_CD = :REGION_CD
                AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
                AND i.svc_induty_sclas_cd_nm = top10.nm
            ),0)
            FROM top10
            ORDER BY top10.tot DESC;


  - name: "19: 내외국인 소비 비교"
    tokens:
      # 외국인 TOP3 업종 + 비중(%)
      SL19_1:
        sql: | # 외국인 1위 업종(코드)
          SELECT i.svc_induty_sclas_cd_nm
          FROM (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(FRGNR_SALAMT) amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
            ORDER BY amt DESC
            LIMIT 1
          ) t JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL19_2:
        sql: | # 외국인 1위 업종 비중(%)
          WITH agg AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(FRGNR_SALAMT) AS amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          tot AS (
            SELECT SUM(FRGNR_SALAMT) AS total
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          pick AS (
            SELECT amt
            FROM agg
            ORDER BY amt DESC, SVC_INDUTY_SCLAS_CD
            LIMIT 1
          )
          SELECT ROUND(100.0 * (SELECT amt FROM pick) / NULLIF((SELECT total FROM tot),0), 1);

      SL19_3:
        sql: | # 외국인 2위 업종(코드)
          SELECT i.svc_induty_sclas_cd_nm
          FROM (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(FRGNR_SALAMT) amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
            ORDER BY amt DESC
            LIMIT 1 OFFSET 1
          ) t JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL19_4:
        sql: | # 외국인 2위 비중(%)
          WITH agg AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(FRGNR_SALAMT) AS amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          tot AS (
            SELECT SUM(FRGNR_SALAMT) AS total
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          pick AS (
            SELECT amt
            FROM agg
            ORDER BY amt DESC, SVC_INDUTY_SCLAS_CD
            LIMIT 1 OFFSET 1
          )
          SELECT ROUND(100.0 * (SELECT amt FROM pick) / NULLIF((SELECT total FROM tot),0), 1);

      SL19_5:
        sql: | # 외국인 3위 업종(코드)
          SELECT i.svc_induty_sclas_cd_nm
          FROM (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(FRGNR_SALAMT) amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
            ORDER BY amt DESC
            LIMIT 1 OFFSET 2
          ) t JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL19_6:
        sql: | # 외국인 3위 비중(%)
          WITH agg AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(FRGNR_SALAMT) AS amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          tot AS (
            SELECT SUM(FRGNR_SALAMT) AS total
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          pick AS (
            SELECT amt
            FROM agg
            ORDER BY amt DESC, SVC_INDUTY_SCLAS_CD
            LIMIT 1 OFFSET 2
          )
          SELECT ROUND(100.0 * (SELECT amt FROM pick) / NULLIF((SELECT total FROM tot),0), 1);

      # 내국인 TOP3 업종 + 비중(%)
      SL19_7:
        sql: | # 내국인 1위 업종
          SELECT i.svc_induty_sclas_cd_nm
          FROM (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(NATIVE_SALAMT) amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
            ORDER BY amt DESC
            LIMIT 1
          ) t JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL19_8:
        sql: | # 내국인 1위 비중(%)
          WITH agg AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(NATIVE_SALAMT) AS amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          tot AS (
            SELECT SUM(NATIVE_SALAMT) AS total
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          pick AS (
            SELECT amt
            FROM agg
            ORDER BY amt DESC, SVC_INDUTY_SCLAS_CD
            LIMIT 1
          )
          SELECT ROUND(100.0 * (SELECT amt FROM pick) / NULLIF((SELECT total FROM tot),0), 1);

      SL19_9:
        sql: | # 내국인 2위 업종(코드)
          SELECT i.svc_induty_sclas_cd_nm
          FROM (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(NATIVE_SALAMT) amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
            ORDER BY amt DESC
            LIMIT 1 OFFSET 1
          ) t JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;

      SL19_10:
        sql: | # 내국인 2위 비중(%)
          WITH agg AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(NATIVE_SALAMT) AS amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          tot AS (
            SELECT SUM(NATIVE_SALAMT) AS total
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          pick AS (
            SELECT amt
            FROM agg
            ORDER BY amt DESC, SVC_INDUTY_SCLAS_CD
            LIMIT 1 OFFSET 1
          )
          SELECT ROUND(100.0 * (SELECT amt FROM pick) / NULLIF((SELECT total FROM tot),0), 1);

      SL19_11:
        sql: | # 내국인 3위 업종
          SELECT i.svc_induty_sclas_cd_nm
          FROM (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(NATIVE_SALAMT) amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
            ORDER BY amt DESC
            LIMIT 1 OFFSET 2
          ) t JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd;
      SL19_12:
        sql: | # 내국인 3위 비중(%)
          WITH agg AS (
            SELECT SVC_INDUTY_SCLAS_CD, SUM(NATIVE_SALAMT) AS amt
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
            GROUP BY SVC_INDUTY_SCLAS_CD
          ),
          tot AS (
            SELECT SUM(NATIVE_SALAMT) AS total
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ),
          pick AS (
            SELECT amt
            FROM agg
            ORDER BY amt DESC, SVC_INDUTY_SCLAS_CD
            LIMIT 1 OFFSET 2
          )
          SELECT ROUND(100.0 * (SELECT amt FROM pick) / NULLIF((SELECT total FROM tot),0), 1);

      # 총액/건수/1건당 평균
      SL19_13:
        sql: | # 내국인 총 매출액
          SELECT to_char(ROUND(SUM(NATIVE_SALAMT)/ 1000000,0),'FM999,999,999,999')
          FROM regionmonitor.TB_NATION_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL19_14:
        sql: | # 외국인 총 매출액
          SELECT to_char(ROUND(SUM(FRGNR_SALAMT)/ 1000000,0),'FM999,999,999,999')
          FROM regionmonitor.TB_NATION_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL19_15:
        sql: | # 내국인 총 매출건수
          SELECT to_char(SUM(NATIVE_DCNT),'FM999,999,999,999')
          FROM regionmonitor.TB_NATION_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL19_16:
        sql: | # 외국인 총 매출건수
          SELECT to_char(SUM(FRGNR_DCNT),'FM999,999,999,999')
          FROM regionmonitor.TB_NATION_SELNG
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL19_17:
        sql: | # 내국인 1건당 평균(원)
          WITH x AS (
            SELECT SUM(NATIVE_SALAMT) a, SUM(NATIVE_DCNT) c
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT to_char(a/NULLIF(c,0),'FM999,999,999,999') FROM x;

      SL19_18:
        sql: | # 외국인 1건당 평균(원)
          WITH x AS (
            SELECT SUM(FRGNR_SALAMT) a, SUM(FRGNR_DCNT) c
            FROM regionmonitor.TB_NATION_SELNG
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          ) SELECT to_char(a/NULLIF(c,0),'FM999,999,999,999') FROM x;


    charts:
      SL19_treemap_fr:  # 임의 키 (실제 도형명 아님)
        shape: "SL19_treemap_1"          # PPT 도형 이름
        outfile: "out/img/SL19_fr.png" # 저장할 트리맵 이미지 경로
        color_hex: "#E74C3C"
        treemap_sql: |-
          SELECT
            i.svc_induty_sclas_cd_nm AS nm,
            SUM(t.FRGNR_SALAMT)/1000000     AS val_eok
          FROM regionmonitor.TB_NATION_SELNG t
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          WHERE t.REGION_CD = :REGION_CD
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY i.svc_induty_sclas_cd_nm
          ORDER BY SUM(t.FRGNR_SALAMT) DESC
          LIMIT 8;


      SL19_treemap_kr:
        shape: "SL19_treemap_2"
        outfile: "out/img/SL19_kr.png"
        color_hex: "#1F4E79"
        treemap_sql: |-
          SELECT
            i.svc_induty_sclas_cd_nm AS nm,
            SUM(t.NATIVE_SALAMT)/1000000   AS val_eok
          FROM regionmonitor.TB_NATION_SELNG t
          JOIN regionmonitor.tb_svc_induty_sclas i
            ON t.SVC_INDUTY_SCLAS_CD = i.svc_induty_sclas_cd
          WHERE t.REGION_CD = :REGION_CD
            AND t.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          GROUP BY i.svc_induty_sclas_cd_nm
          ORDER BY SUM(t.NATIVE_SALAMT) DESC
          LIMIT 8;


  - name: "20: 축제 전중후 매출 분석"
    tokens:
      # 공통: 이전/축제/이후 경계(YYYYMMDD 문자열) 계산 → 각 토큰에서 재사용
      #  d_from = :DATE_FROM, d_to = :DATE_TO
      #  prev: [d_from - n  ~ d_from - 1]
      #  fest: [d_from      ~ d_to]
      #  next: [d_to + 1    ~ d_to + n]

      SL20_1:  # 직전 1주 일평균 매출금액
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') d_from
          ),
          b AS (
            SELECT to_char(d_from - INTERVAL '7 day','YYYYMMDD') f,
                  to_char(d_from - INTERVAL '1 day','YYYYMMDD') t
            FROM d
          )
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_SALAMT)::numeric / 7, 0), 0), 'FM9,999,999,999')
          FROM regionmonitor.tb_sexdstn_selng s, b
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN b.f AND b.t;

      SL20_2:  # 직전 1주 일평균 매출건수
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') d_from
          ),
          b AS (
            SELECT to_char(d_from - INTERVAL '7 day','YYYYMMDD') f,
                  to_char(d_from - INTERVAL '1 day','YYYYMMDD') t
            FROM d
          )
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_DCNT)::numeric / 7, 2), 0), 'FM9,999,999,999')
          FROM regionmonitor.tb_sexdstn_selng s, b
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN b.f AND b.t;

      SL20_3:  # 직전 1주 1건당 평균금액 (원)
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') d_from
          ),
          b AS (
            SELECT to_char(d_from - INTERVAL '7 day','YYYYMMDD') f,
                  to_char(d_from - INTERVAL '1 day','YYYYMMDD') t
            FROM d
          )
          SELECT TO_CHAR(COALESCE((SUM(TOT_SALAMT)::numeric / NULLIF(SUM(TOT_DCNT),0))::numeric(18,0), 0), 'FM9,999,999,999')
          FROM regionmonitor.tb_sexdstn_selng s, b
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN b.f AND b.t;

      SL20_4:  # 축제기간 일평균 소비금액
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') d_from,
                  to_date(:DATE_TO  ,'YYYYMMDD') d_to
          ),
          span AS (SELECT (d_to - d_from + 1) AS n FROM d)
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_SALAMT)::numeric / (SELECT n FROM span), 0), 0), 'FM9,999,999,999')
          FROM regionmonitor.tb_sexdstn_selng s
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL20_5:  # 축제기간 일평균 소비건수
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') d_from,
                  to_date(:DATE_TO  ,'YYYYMMDD') d_to
          ),
          span AS (SELECT (d_to - d_from + 1) AS n FROM d)
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_DCNT)::numeric / (SELECT n FROM span), 2), 0), 'FM9,999,999,999')
          FROM regionmonitor.tb_sexdstn_selng s
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL20_6:  # 축제기간 1건당 평균금액
        sql: |
          SELECT TO_CHAR(COALESCE((SUM(TOT_SALAMT)::numeric / NULLIF(SUM(TOT_DCNT),0))::numeric(18,0), 0), 'FM9,999,999,999')
          FROM regionmonitor.tb_sexdstn_selng
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      # (축제 vs 이전) 증감률(%) ─ 일평균 매출금액
      SL20_4P:
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') d_from,
                  to_date(:DATE_TO  ,'YYYYMMDD') d_to
          ),
          span AS (SELECT (d_to - d_from + 1) n FROM d),
          b AS (
            SELECT to_char(d_from - INTERVAL '7 day','YYYYMMDD') prev_from,
                  to_char(d_from - INTERVAL '1 day','YYYYMMDD') prev_to,
                  to_char(d_from,'YYYYMMDD')                    fest_from,
                  to_char(d_to  ,'YYYYMMDD')                    fest_to
            FROM d
          ),
          prev AS (  -- 직전 1주 총액
            SELECT COALESCE(SUM(TOT_SALAMT),0)::numeric v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.prev_from AND b.prev_to
          ),
          cur AS (   -- 축제기간 총액
            SELECT COALESCE(SUM(TOT_SALAMT),0)::numeric v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.fest_from AND b.fest_to
          )
          SELECT CASE 
                  WHEN (SELECT v FROM prev) = 0 THEN 0
                  ELSE ROUND( ((SELECT v FROM cur) / (SELECT n FROM span)::numeric
                              -  (SELECT v FROM prev) / 7.0)
                            / ((SELECT v FROM prev) / 7.0) * 100, 1)
                END;

      # (축제 vs 이전) 증감률(%) ─ 일평균 매출건수
      SL20_5P:
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') d_from,
                  to_date(:DATE_TO  ,'YYYYMMDD') d_to
          ),
          span AS (SELECT (d_to - d_from + 1) n FROM d),
          b AS (
            SELECT to_char(d_from - INTERVAL '7 day','YYYYMMDD') prev_from,
                  to_char(d_from - INTERVAL '1 day','YYYYMMDD') prev_to,
                  to_char(d_from,'YYYYMMDD')                    fest_from,
                  to_char(d_to  ,'YYYYMMDD')                    fest_to
            FROM d
          ),
          prev AS (  -- 직전 1주 총 건수
            SELECT COALESCE(SUM(TOT_DCNT),0)::numeric v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.prev_from AND b.prev_to
          ),
          cur AS (   -- 축제기간 총 건수
            SELECT COALESCE(SUM(TOT_DCNT),0)::numeric v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.fest_from AND b.fest_to
          )
          SELECT CASE 
                  WHEN (SELECT v FROM prev) = 0 THEN 0
                  ELSE ROUND( ((SELECT v FROM cur) / (SELECT n FROM span)::numeric
                              -  (SELECT v FROM prev) / 7.0)
                            / ((SELECT v FROM prev) / 7.0) * 100, 1)
                END;

      # (축제 vs 이전) 증감률(%) ─ 1건당 평균금액
      #  * 전/축제 기간 각각 '총액/총건수'로 계산한 평균을 비교 (일평균이 아님)
      SL20_6P:
        sql: |
          WITH b AS (
            SELECT to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '7 day','YYYYMMDD') AS prev_from,
                  to_char(to_date(:DATE_FROM,'YYYYMMDD') - INTERVAL '1 day','YYYYMMDD') AS prev_to,
                  CAST(:DATE_FROM AS VARCHAR) AS fest_from,
                  CAST(:DATE_TO   AS VARCHAR) AS fest_to
          ),
          prev AS (
            SELECT (SUM(TOT_SALAMT)::numeric / NULLIF(SUM(TOT_DCNT),0)) AS v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.prev_from AND b.prev_to
          ),
          cur AS (
            SELECT (SUM(TOT_SALAMT)::numeric / NULLIF(SUM(TOT_DCNT),0)) AS v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.fest_from AND b.fest_to
          )
          SELECT CASE
                  WHEN (SELECT v FROM prev) = 0 THEN 0
                  ELSE ROUND( ((SELECT v FROM cur) - (SELECT v FROM prev))
                            /  (SELECT v FROM prev) * 100, 1)
                END;



      SL20_7:  # 직후 1주 일평균 소비금액
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_TO,'YYYYMMDD') d_to
          ),
          b AS (
            SELECT to_char(d_to + INTERVAL '1 day','YYYYMMDD') f,
                  to_char(d_to + INTERVAL '7 day','YYYYMMDD') t
            FROM d
          )
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_SALAMT)::numeric / 7, 0), 0), 'FM9,999,999,999')
          FROM regionmonitor.tb_sexdstn_selng s, b
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN b.f AND b.t;

      SL20_8:  # 직후 1주 일평균 소비건수
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_TO,'YYYYMMDD') d_to
          ),
          b AS (
            SELECT to_char(d_to + INTERVAL '1 day','YYYYMMDD') f,
                  to_char(d_to + INTERVAL '7 day','YYYYMMDD') t
            FROM d
          )
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_DCNT)::numeric / 7, 2), 0), 'FM9,999,999,999')
          FROM regionmonitor.tb_sexdstn_selng s, b
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN b.f AND b.t;

      SL20_9:  # 직후 1주 1건당 평균금액
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_TO,'YYYYMMDD') d_to
          ),
          b AS (
            SELECT to_char(d_to + INTERVAL '1 day','YYYYMMDD') f,
                  to_char(d_to + INTERVAL '7 day','YYYYMMDD') t
            FROM d
          )
          SELECT TO_CHAR(COALESCE((SUM(TOT_SALAMT)::numeric / NULLIF(SUM(TOT_DCNT),0))::numeric(18,0), 0), 'FM9,999,999,999')
          FROM regionmonitor.tb_sexdstn_selng s, b
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN b.f AND b.t;

      # (축제 vs 이후) 증감률(%)
      SL20_7P:  # 금액 증감률
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') AS d_from,
                  to_date(:DATE_TO  ,'YYYYMMDD') AS d_to
          ),
          span AS (SELECT (d_to - d_from + 1) AS n FROM d),
          b AS (
            SELECT CAST(:DATE_FROM AS VARCHAR) AS fest_from,
                  CAST(:DATE_TO   AS VARCHAR) AS fest_to,
                  to_char(d_to + INTERVAL '1 day','YYYYMMDD') AS next_from,
                  to_char(d_to + INTERVAL '7 day','YYYYMMDD') AS next_to
            FROM d
          ),
          fest AS (
            SELECT COALESCE(SUM(TOT_SALAMT),0)::numeric AS v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.fest_from AND b.fest_to
          ),
          nxt AS (
            SELECT COALESCE(SUM(TOT_SALAMT),0)::numeric AS v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.next_from AND b.next_to
          )
          SELECT CASE
                  WHEN (SELECT v FROM fest) = 0 THEN 0
                  ELSE ROUND( ((SELECT v FROM nxt)  / 7.0
                              - (SELECT v FROM fest) / (SELECT n FROM span)::numeric)
                            / ((SELECT v FROM fest) / (SELECT n FROM span)::numeric) * 100, 1)
                END;


      SL20_8P:  # 건수 증감률
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') AS d_from,
                  to_date(:DATE_TO  ,'YYYYMMDD') AS d_to
          ),
          span AS (SELECT (d_to - d_from + 1) AS n FROM d),
          b AS (
            SELECT CAST(:DATE_FROM AS VARCHAR) AS fest_from,
                  CAST(:DATE_TO   AS VARCHAR) AS fest_to,
                  to_char(d_to + INTERVAL '1 day','YYYYMMDD') AS next_from,
                  to_char(d_to + INTERVAL '7 day','YYYYMMDD') AS next_to
            FROM d
          ),
          fest AS (
            SELECT COALESCE(SUM(TOT_DCNT),0)::numeric AS v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.fest_from AND b.fest_to
          ),
          nxt AS (
            SELECT COALESCE(SUM(TOT_DCNT),0)::numeric AS v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.next_from AND b.next_to
          )
          SELECT CASE
                  WHEN (SELECT v FROM fest) = 0 THEN 0
                  ELSE ROUND( ((SELECT v FROM nxt)  / 7.0
                              - (SELECT v FROM fest) / (SELECT n FROM span)::numeric)
                            / ((SELECT v FROM fest) / (SELECT n FROM span)::numeric) * 100, 1)
                END;


      SL20_9P:  # 1건당 평균금액 증감률
        sql: |
          WITH b AS (
            SELECT CAST(:DATE_FROM AS VARCHAR) AS fest_from,
                  CAST(:DATE_TO   AS VARCHAR) AS fest_to,
                  to_char(to_date(:DATE_TO,'YYYYMMDD') + INTERVAL '1 day','YYYYMMDD') AS next_from,
                  to_char(to_date(:DATE_TO,'YYYYMMDD') + INTERVAL '7 day','YYYYMMDD') AS next_to
          ),
          fest AS (
            SELECT (SUM(TOT_SALAMT)::numeric / NULLIF(SUM(TOT_DCNT),0)) AS v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.fest_from AND b.fest_to
          ),
          nxt AS (
            SELECT (SUM(TOT_SALAMT)::numeric / NULLIF(SUM(TOT_DCNT),0)) AS v
            FROM regionmonitor.tb_sexdstn_selng s, b
            WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD BETWEEN b.next_from AND b.next_to
          )
          SELECT CASE
                  WHEN (SELECT v FROM fest) = 0 THEN 0
                  ELSE ROUND( ((SELECT v FROM nxt) - (SELECT v FROM fest))
                            /  (SELECT v FROM fest) * 100, 1)
                END;


    charts:
      SL20_chart:
        category_sql: |-
          WITH
          d AS (
            SELECT 
              to_date(:DATE_FROM,'YYYYMMDD') AS d_from,
              to_date(:DATE_TO  ,'YYYYMMDD') AS d_to
          ),
          prev AS (
            SELECT gs::date AS d, ROW_NUMBER() OVER (ORDER BY gs) AS seq
            FROM d, generate_series((SELECT d_from FROM d) - INTERVAL '7 day',
                                    (SELECT d_from FROM d) - INTERVAL '1 day',
                                    INTERVAL '1 day') gs
          ),
          fest AS (
            SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
            FROM d, generate_series((SELECT d_from FROM d),
                                    (SELECT d_to   FROM d),
                                    INTERVAL '1 day') gs
          ),
          nxt AS (
            SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + (SELECT COUNT(*) FROM fest) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
            FROM d, generate_series((SELECT d_to FROM d) + INTERVAL '1 day',
                                    (SELECT d_to FROM d) + INTERVAL '7 day',
                                    INTERVAL '1 day') gs
          ),
          all_days AS (
            SELECT d, seq FROM prev
            UNION ALL SELECT d, seq FROM fest
            UNION ALL SELECT d, seq FROM nxt
          )
          SELECT label
          FROM (
            SELECT 
              seq,
              CASE 
                WHEN d <  (SELECT d_from FROM d) THEN 'D-' || ((SELECT d_from FROM d) - d)
                WHEN d BETWEEN (SELECT d_from FROM d) AND (SELECT d_to FROM d)
                  THEN 'DAY' || (d - (SELECT d_from FROM d) + 1)
                ELSE 'D+' || (d - (SELECT d_to FROM d))
              END AS label
            FROM all_days
          ) x
          ORDER BY seq;

        series:
          매출금액(백만원): |-
            WITH
            d AS (
              SELECT 
                to_date(:DATE_FROM,'YYYYMMDD') AS d_from,
                to_date(:DATE_TO  ,'YYYYMMDD') AS d_to
            ),
            prev AS (
              SELECT gs::date AS d, ROW_NUMBER() OVER (ORDER BY gs) AS seq
              FROM d, generate_series((SELECT d_from FROM d) - INTERVAL '7 day',
                                      (SELECT d_from FROM d) - INTERVAL '1 day',
                                      INTERVAL '1 day') gs
            ),
            fest AS (
              SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
              FROM d, generate_series((SELECT d_from FROM d),
                                      (SELECT d_to   FROM d),
                                      INTERVAL '1 day') gs
            ),
            nxt AS (
              SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + (SELECT COUNT(*) FROM fest) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
              FROM d, generate_series((SELECT d_to FROM d) + INTERVAL '1 day',
                                      (SELECT d_to FROM d) + INTERVAL '7 day',
                                      INTERVAL '1 day') gs
            ),
            all_days AS (
              SELECT d, seq FROM prev
              UNION ALL SELECT d, seq FROM fest
              UNION ALL SELECT d, seq FROM nxt
            ),
            flag AS (
              SELECT 
                a.seq,
                CASE WHEN a.d BETWEEN (SELECT d_from FROM d) AND (SELECT d_to FROM d)
                    THEN 1 ELSE 0 END AS is_festival
              FROM all_days a
            ),
            agg AS (
              SELECT 
                a.seq,
                (COALESCE(SUM(s.TOT_SALAMT),0)::numeric / 1000000.0)::numeric(18,2) AS val
              FROM all_days a
              LEFT JOIN regionmonitor.tb_sexdstn_selng s
                ON s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD = to_char(a.d,'YYYYMMDD')
              GROUP BY a.seq
            )
            SELECT agg.val, flag.is_festival
            FROM agg
            JOIN flag USING (seq)
            ORDER BY seq;

          매출건수(건): |-
            WITH
            d AS (
              SELECT 
                to_date(:DATE_FROM,'YYYYMMDD') AS d_from,
                to_date(:DATE_TO  ,'YYYYMMDD') AS d_to
            ),
            prev AS (
              SELECT gs::date AS d, ROW_NUMBER() OVER (ORDER BY gs) AS seq
              FROM d, generate_series((SELECT d_from FROM d) - INTERVAL '7 day',
                                      (SELECT d_from FROM d) - INTERVAL '1 day',
                                      INTERVAL '1 day') gs
            ),
            fest AS (
              SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
              FROM d, generate_series((SELECT d_from FROM d),
                                      (SELECT d_to   FROM d),
                                      INTERVAL '1 day') gs
            ),
            nxt AS (
              SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + (SELECT COUNT(*) FROM fest) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
              FROM d, generate_series((SELECT d_to FROM d) + INTERVAL '1 day',
                                      (SELECT d_to FROM d) + INTERVAL '7 day',
                                      INTERVAL '1 day') gs
            ),
            all_days AS (
              SELECT d, seq FROM prev
              UNION ALL SELECT d, seq FROM fest
              UNION ALL SELECT d, seq FROM nxt
            ),
            flag AS (
              SELECT 
                a.seq,
                CASE WHEN a.d BETWEEN (SELECT d_from FROM d) AND (SELECT d_to FROM d)
                    THEN 1 ELSE 0 END AS is_festival
              FROM all_days a
            ),
            agg AS (
              SELECT 
                a.seq,
                COALESCE(SUM(s.TOT_DCNT),0)::bigint AS val
              FROM all_days a
              LEFT JOIN regionmonitor.tb_sexdstn_selng s
                ON s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD = to_char(a.d,'YYYYMMDD')
              GROUP BY a.seq
            )
            SELECT agg.val, flag.is_festival
            FROM agg
            JOIN flag USING (seq)
            ORDER BY seq;




  - name: "21: 축제 전중후 방문인구 분석"
    tokens:
      # ─────────── 직전 1주 ───────────
      SL21_1:  # 총 방문인구(명)
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') AS d_from
          ),
          rng AS (
            SELECT to_char(d_from - INTERVAL '7 day','YYYYMMDD') AS f,
                  to_char(d_from - INTERVAL '1 day','YYYYMMDD') AS t
            FROM d
          )
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_VIPOP)),0), 'FM9,999,999,999')
          FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN s, rng
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN rng.f AND rng.t;

      SL21_2:  # 일평균 방문인구(명)
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_FROM,'YYYYMMDD') AS d_from
          ),
          rng AS (
            SELECT to_char(d_from - INTERVAL '7 day','YYYYMMDD') AS f,
                  to_char(d_from - INTERVAL '1 day','YYYYMMDD') AS t
            FROM d
          )
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_VIPOP)::numeric / 7),0), 'FM9,999,999,999')
          FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN s, rng
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN rng.f AND rng.t;

      # ─────────── 축제 기간 ───────────
      SL21_3:  # 총 방문인구(명)
        sql: |
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_VIPOP)),0), 'FM9,999,999,999')
          FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      SL21_4:  # 일평균 방문인구(명)
        sql: |
          WITH span AS (
            SELECT (to_date(:DATE_TO,'YYYYMMDD') - to_date(:DATE_FROM,'YYYYMMDD') + 1) AS n
          )
          SELECT TO_CHAR(
                  COALESCE(
                    ROUND(
                      SUM(TOT_VIPOP)::numeric / NULLIF((SELECT n FROM span)::numeric, 0)
                    ),
                    0
                  ),
                  'FM9,999,999,999'
                )
          FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
          WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO;

      # ─────────── 직후 1주 ───────────
      SL21_5:  # 총 방문인구(명)
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_TO,'YYYYMMDD') AS d_to
          ),
          rng AS (
            SELECT to_char(d_to + INTERVAL '1 day','YYYYMMDD') AS f,
                  to_char(d_to + INTERVAL '7 day','YYYYMMDD') AS t
            FROM d
          )
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_VIPOP)),0), 'FM9,999,999,999')
          FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN s, rng
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN rng.f AND rng.t;

      SL21_6:  # 일평균 방문인구(명)
        sql: |
          WITH d AS (
            SELECT to_date(:DATE_TO,'YYYYMMDD') AS d_to
          ),
          rng AS (
            SELECT to_char(d_to + INTERVAL '1 day','YYYYMMDD') AS f,
                  to_char(d_to + INTERVAL '7 day','YYYYMMDD') AS t
            FROM d
          )
          SELECT TO_CHAR(COALESCE(ROUND(SUM(TOT_VIPOP)::numeric / 7),0), 'FM9,999,999,999')
          FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN s, rng
          WHERE s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
            AND s.STDR_YMD BETWEEN rng.f AND rng.t;


    charts:
      SL21_chart:
        category_sql: |-
          WITH
          d AS (
            SELECT 
              to_date(:DATE_FROM,'YYYYMMDD') AS d_from,
              to_date(:DATE_TO  ,'YYYYMMDD') AS d_to
          ),
          prev AS (
            SELECT gs::date AS d, ROW_NUMBER() OVER (ORDER BY gs) AS seq
            FROM d, generate_series((SELECT d_from FROM d) - INTERVAL '7 day',
                                    (SELECT d_from FROM d) - INTERVAL '1 day',
                                    INTERVAL '1 day') gs
          ),
          fest AS (
            SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
            FROM d, generate_series((SELECT d_from FROM d),
                                    (SELECT d_to   FROM d),
                                    INTERVAL '1 day') gs
          ),
          nxt AS (
            SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + (SELECT COUNT(*) FROM fest) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
            FROM d, generate_series((SELECT d_to FROM d) + INTERVAL '1 day',
                                    (SELECT d_to FROM d) + INTERVAL '7 day',
                                    INTERVAL '1 day') gs
          ),
          all_days AS (
            SELECT d, seq FROM prev
            UNION ALL SELECT d, seq FROM fest
            UNION ALL SELECT d, seq FROM nxt
          )
          SELECT label
          FROM (
            SELECT 
              seq,
              CASE 
                WHEN d <  (SELECT d_from FROM d) THEN 'D-' || ((SELECT d_from FROM d) - d)
                WHEN d BETWEEN (SELECT d_from FROM d) AND (SELECT d_to FROM d)
                  THEN 'DAY' || (d - (SELECT d_from FROM d) + 1)
                ELSE 'D+' || (d - (SELECT d_to FROM d))
              END AS label
            FROM all_days
          ) x
          ORDER BY seq;

        series:
          방문인구(명): |-
            WITH
            d AS (
              SELECT 
                to_date(:DATE_FROM,'YYYYMMDD') AS d_from,
                to_date(:DATE_TO  ,'YYYYMMDD') AS d_to
            ),
            prev AS (
              SELECT gs::date AS d, ROW_NUMBER() OVER (ORDER BY gs) AS seq
              FROM d, generate_series((SELECT d_from FROM d) - INTERVAL '7 day',
                                      (SELECT d_from FROM d) - INTERVAL '1 day',
                                      INTERVAL '1 day') gs
            ),
            fest AS (
              SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
              FROM d, generate_series((SELECT d_from FROM d),
                                      (SELECT d_to   FROM d),
                                      INTERVAL '1 day') gs
            ),
            nxt AS (
              SELECT gs::date AS d, (SELECT COUNT(*) FROM prev) + (SELECT COUNT(*) FROM fest) + ROW_NUMBER() OVER (ORDER BY gs) AS seq
              FROM d, generate_series((SELECT d_to FROM d) + INTERVAL '1 day',
                                      (SELECT d_to FROM d) + INTERVAL '7 day',
                                      INTERVAL '1 day') gs
            ),
            all_days AS (
              SELECT d, seq FROM prev
              UNION ALL SELECT d, seq FROM fest
              UNION ALL SELECT d, seq FROM nxt
            ),
            flag AS (
              SELECT 
                a.seq,
                CASE WHEN a.d BETWEEN (SELECT d_from FROM d) AND (SELECT d_to FROM d)
                    THEN 1 ELSE 0 END AS is_festival
              FROM all_days a
            ),
            agg AS (
              SELECT 
                a.seq,
                COALESCE(SUM(s.TOT_VIPOP),0)::bigint AS val
              FROM all_days a
              LEFT JOIN regionmonitor.TB_SEXDSTN_VISIT_POPLTN s
                ON s.REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND s.STDR_YMD = to_char(a.d,'YYYYMMDD')
              GROUP BY a.seq
            )
            SELECT agg.val, flag.is_festival
            FROM agg
            JOIN flag USING (seq)
            ORDER BY seq;

  - name: "22: 시설물 및 주차장 현황"
    tokens:
      SL22_1:
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          )
          SELECT TO_CHAR(COALESCE(COUNT(*),0), 'FM999,999,999')
          FROM fac
          WHERE group_nm = '그룹1';

      SL22_2:  # 그룹1 인당 시설수
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          ),
          vip AS (
            SELECT COALESCE(SUM(TOT_VIPOP),0)::numeric AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT
            TO_CHAR(
              COALESCE(
                ROUND(
                  COUNT(*)::numeric / NULLIF((SELECT v FROM vip),0),
                5),
              0),
              'FM0.0000'
            ) || '개'
          FROM fac
          WHERE group_nm = '그룹1';

      SL22_3:
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          )
          SELECT TO_CHAR(COALESCE(COUNT(*),0), 'FM999,999,999')
          FROM fac
          WHERE group_nm = '그룹6';

      SL22_4:  # 그룹6 인당 시설수
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          ),
          vip AS (
            SELECT COALESCE(SUM(TOT_VIPOP),0)::numeric AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT
            TO_CHAR(
              COALESCE(
                ROUND(
                  COUNT(*)::numeric / NULLIF((SELECT v FROM vip),0),
                5),
              0),
              'FM0.0000'
            ) || '개'
          FROM fac
          WHERE group_nm = '그룹6';

      SL22_5:
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          )
          SELECT TO_CHAR(COALESCE(COUNT(*),0), 'FM999,999,999')
          FROM fac
          WHERE group_nm = '그룹8';

      SL22_6:  # 그룹8 인당 시설수
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          ),
          vip AS (
            SELECT COALESCE(SUM(TOT_VIPOP),0)::numeric AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT
            TO_CHAR(
              COALESCE(
                ROUND(
                  COUNT(*)::numeric / NULLIF((SELECT v FROM vip),0),
                5),
              0),
              'FM0.0000'
            ) || '개'
          FROM fac
          WHERE group_nm = '그룹8';

      SL22_7:
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          )
          SELECT TO_CHAR(COALESCE(COUNT(*),0), 'FM999,999,999')
          FROM fac
          WHERE group_nm = '그룹2(개별)';

      SL22_8:  # 그룹2 인당 시설수
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          ),
          vip AS (
            SELECT COALESCE(SUM(TOT_VIPOP),0)::numeric AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT
            TO_CHAR(
              COALESCE(
                ROUND(
                  COUNT(*)::numeric / NULLIF((SELECT v FROM vip),0),
                5),
              0),
              'FM0.0000'
            ) || '개'
          FROM fac
          WHERE group_nm = '그룹2(개별)';

      SL22_9:
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          )
          SELECT TO_CHAR(COALESCE(COUNT(*),0), 'FM999,999,999')
          FROM fac
          WHERE group_nm = '그룹3(개별)';

      SL22_10:  # 그룹3 인당 시설수
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          ),
          vip AS (
            SELECT COALESCE(SUM(TOT_VIPOP),0)::numeric AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT
            TO_CHAR(
              COALESCE(
                ROUND(
                  COUNT(*)::numeric / NULLIF((SELECT v FROM vip),0),
                5),
              0),
              'FM0.0000'
            ) || '개'
          FROM fac
          WHERE group_nm = '그룹3(개별)';

      SL22_11:
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          )
          SELECT TO_CHAR(COALESCE(COUNT(*),0), 'FM999,999,999')
          FROM fac
          WHERE group_nm = '그룹4(개별)';

      SL22_12:  # 그룹4 인당 시설수
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          ),
          vip AS (
            SELECT COALESCE(SUM(TOT_VIPOP),0)::numeric AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT
            TO_CHAR(
              COALESCE(
                ROUND(
                  COUNT(*)::numeric / NULLIF((SELECT v FROM vip),0),
                5),
              0),
              'FM0.0000'
            ) || '개'
          FROM fac
          WHERE group_nm = '그룹4(개별)';

      SL22_13:
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          )
          SELECT TO_CHAR(COALESCE(COUNT(*),0), 'FM999,999,999')
          FROM fac
          WHERE group_nm = '그룹5(개별)';

      SL22_14:  # 그룹5 인당 시설수
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          ),
          vip AS (
            SELECT COALESCE(SUM(TOT_VIPOP),0)::numeric AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT
            TO_CHAR(
              COALESCE(
                ROUND(
                  COUNT(*)::numeric / NULLIF((SELECT v FROM vip),0),
                5),
              0),
              'FM0.0000'
            ) || '개'
          FROM fac
          WHERE group_nm = '그룹5(개별)';

      SL22_15:
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          )
          SELECT TO_CHAR(COALESCE(COUNT(*),0), 'FM999,999,999')
          FROM fac
          WHERE group_nm = '그룹7(개별)';

      SL22_16:  # 그룹7 인당 시설수
        sql: |
          WITH
          reg AS (
            SELECT ST_Transform(ST_Buffer(ST_Transform(r.popltn_relm, 5179), :BUFFER_M), 4326) AS geom
            FROM regionmonitor.tb_intrst_region_relm r
            WHERE r.region_cd = :REGION_CD
          ),
          code_map(code, group_nm) AS (VALUES
            ('A','그룹7(개별)'), ('B','그룹6'), ('C','그룹8'), ('D','그룹2(개별)'),
            ('E','그룹3(개별)'), ('F','그룹6'), ('G','그룹1'), ('H','그룹1'),
            ('I','그룹6'), ('J','그룹1'), ('K','그룹8'), ('L','그룹6'),
            ('M','그룹1'), ('N','그룹1'), ('O','그룹4(개별)'), ('P','그룹5(개별)')
          ),
          fac AS (
            SELECT
              f.fclty_nm,
              cm.group_nm
            FROM regionmonitor.TB_MAIN_FCLTY_INFO f
            JOIN reg ON ST_Within(ST_SetSRID(ST_MakePoint(f.Y_CRDNT,f.X_CRDNT),4326), reg.geom)
            LEFT JOIN code_map cm
              ON cm.code = SUBSTRING(TRIM(f.fclty_sclas_cd) FROM 1 FOR 1)
            WHERE UPPER(TRIM(f.fclty_sclas_cd)) <> 'P01'
          ),
          vip AS (
            SELECT COALESCE(SUM(TOT_VIPOP),0)::numeric AS v
            FROM regionmonitor.TB_SEXDSTN_VISIT_POPLTN
            WHERE REGION_CD = CAST(:REGION_CD AS VARCHAR)
              AND STDR_YMD BETWEEN :DATE_FROM AND :DATE_TO
          )
          SELECT
            TO_CHAR(
              COALESCE(
                ROUND(
                  COUNT(*)::numeric / NULLIF((SELECT v FROM vip),0),
                5),
              0),
              'FM0.0000'
            ) || '개'
          FROM fac
          WHERE group_nm = '그룹7(개별)';